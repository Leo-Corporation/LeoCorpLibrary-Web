import{_ as o,r as i,o as p,c,b as n,d as t,e as a,a as s}from"./app.d856a18a.js";const l={},r=s(`<h1 id="networkconnection" tabindex="-1"><a class="header-anchor" href="#networkconnection" aria-hidden="true">#</a> NetworkConnection</h1><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Do not forget to add this line of code in your &quot;using&quot; region:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">LeoCorpLibrary</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Imports</span> LeoCorpLibrary
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h2><p>There are various methods available in <code>NetworkConnection</code> to help achieve what you wanna do.</p><p>They are in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="a-isavailable" tabindex="-1"><a class="header-anchor" href="#a-isavailable" aria-hidden="true">#</a> a. IsAvailable</h3><p><strong>This method is available in version 1.1 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>This method tries to connect to https://bing.com by default. If it receives a positive status code (like 200), it will return <code>true</code>.</p><p>You can specify a custom website if you want to:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">url</td><td style="text-align:center;">The URL of the website where the connection is going to be tested</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">Note</p><p>Specifying a custom website is available starting with version 4.1+.</p></div><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Connected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Not connected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Or</span>
<span class="token class-name"><span class="token keyword">bool</span></span> isAvailable <span class="token operator">=</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailable</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">If</span> <span class="token punctuation">(</span>NetworkConnection<span class="token punctuation">.</span>IsAvailable<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">Then</span>
    Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;Connected&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Else</span>
    Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;Not connected&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>

<span class="token comment">&#39; Or</span>
<span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">Or</span>
<span class="token keyword">Dim</span> isAvailable <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> NetworkConnection<span class="token punctuation">.</span>IsAvailable<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="b-isavailabletestsite" tabindex="-1"><a class="header-anchor" href="#b-isavailabletestsite" aria-hidden="true">#</a> b. IsAvailableTestSite</h3><p><strong>This method is available in version 1.1 and higher.</strong></p><div class="custom-container danger"><p class="custom-container-title">Obsolete</p><p>This method is obsolete, please use <a href="#a-isavailable"><code>IsAvailable()</code></a> instead.</p></div><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>This method is going to try to connect to a specific page that you specified. If it manages to connect to that page, it means there is an Internet connection.</p><p>You must specify a website like this:</p><p>Example:</p><p><code>IsAvailableTestSite(&quot;https://example.com&quot;)</code></p><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailableTestSite</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// If true</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Connected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Not connected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">If</span> <span class="token punctuation">(</span>NetworkConnection<span class="token punctuation">.</span>IsAvailableTestSite<span class="token punctuation">(</span><span class="token string">&quot;https://example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">Then</span> <span class="token comment">&#39; If true</span>
    Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;Connected&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Else</span>
    Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;Not connected&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p><h3 id="c-isavailableasync" tabindex="-1"><a class="header-anchor" href="#c-isavailableasync" aria-hidden="true">#</a> c. IsAvailableAsync</h3><p><strong>This method is available in version 2.1 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>This method tries to connect to https://bing.com by default. If it receives a positive status code (like 200), it will return <code>true</code>.</p><p>You can specify a custom website if you want to:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">url</td><td style="text-align:center;">The URL of the website where the connection is going to be tested</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">Note</p><p>Specifying a custom website is available starting with version 4.1+.</p></div><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailableAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> connectionAvailable <span class="token operator">=</span> <span class="token keyword">await</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailableAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Or</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> connectionAvailable2 <span class="token operator">=</span> <span class="token keyword">await</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailableAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Private</span> Async <span class="token keyword">Sub</span> TestConnection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> connectionAvailable <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> Await NetworkConnection<span class="token punctuation">.</span>IsAvailableAsync<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">&#39; Or</span>
    <span class="token keyword">Dim</span> connectionAvailable2 <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> Await NetworkConnection<span class="token punctuation">.</span>IsAvailableAsync<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p><h3 id="d-isavailabletestsiteasync" tabindex="-1"><a class="header-anchor" href="#d-isavailabletestsiteasync" aria-hidden="true">#</a> d. IsAvailableTestSiteAsync</h3><p><strong>This method is available in version 2.1 and higher.</strong></p><div class="custom-container danger"><p class="custom-container-title">Obsolete</p><p>This method is obsolete, please use <a href="#c-isavailableasync"><code>IsAvailableAsync()</code></a> instead.</p></div><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>This method verifies if an Internet connection is available by sending a request on a specified website. Returns a <code>bool</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailableTestSiteAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">site</td><td style="text-align:center;">URL of the website where the connection is tested</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">TestConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">bool</span></span> connectionAvailable <span class="token operator">=</span> <span class="token keyword">await</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">IsAvailableTestSiteAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Private</span> Async <span class="token keyword">Sub</span> TestConnection<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> connectionAvailable <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> Await NetworkConnection<span class="token punctuation">.</span>IsAvailableTestSiteAsync<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">Sub</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p><h3 id="e-getwebpagestatuscode" tabindex="-1"><a class="header-anchor" href="#e-getwebpagestatuscode" aria-hidden="true">#</a> e. GetWebPageStatusCode</h3><p><strong>This method is available in version 4.1 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><div class="custom-container danger"><p class="custom-container-title">Obsolete</p><p>This method is obsolete, please use <a href="#f-getwebpagestatuscodeasync"><code>GetWebPageStatusCodeAsync()</code></a> instead.</p></div><p>The <code>GetWebPageStatusCode()</code> method allows you to get the status code of a specified website. It returns an <code>int</code> value.</p>`,72),d={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"},u=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">url</td><td style="text-align:center;">The URL of the website</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusCode</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;The website responded: OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">If</span> NetworkConnection<span class="token punctuation">.</span>GetWebPageStatusCode<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">200</span> <span class="token keyword">Then</span>
    Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;The website responded: OK&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">if</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p><h3 id="f-getwebpagestatuscodeasync" tabindex="-1"><a class="header-anchor" href="#f-getwebpagestatuscodeasync" aria-hidden="true">#</a> f. GetWebPageStatusCodeAsync</h3><p><strong>This method is available in version 4.5 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetWebPageStatusCodeAsync()</code> method allows you to get the status code of a specified website asynchronously. It returns an <code>int</code> value.</p>`,14),k={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"},g=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusCodeAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">url</td><td style="text-align:center;">The URL of the website</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">internal</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusCodeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span> 
    <span class="token punctuation">{</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;The website responded: OK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Friend</span> Async <span class="token keyword">Function</span> Main<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">If</span> Await NetworkConnection<span class="token punctuation">.</span>GetWebPageStatusCodeAsync<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">200</span> <span class="token keyword">Then</span>
        Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;The website responded: OK&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">End</span> <span class="token keyword">If</span>
<span class="token keyword">End</span> <span class="token keyword">Function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p><h3 id="g-getwebpagestatusdescription" tabindex="-1"><a class="header-anchor" href="#g-getwebpagestatusdescription" aria-hidden="true">#</a> g. GetWebPageStatusDescription</h3><p><strong>This method is available in version 4.1 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><div class="custom-container danger"><p class="custom-container-title">Obsolete</p><p>This method is obsolete, please use <a href="#h-getwebpagestatusdescriptionasync"><code>GetWebPageStatusDescriptionAsync()</code></a> instead.</p></div><p>The <code>GetWebPageStatusDescription()</code> method allows you to get the status description of a specified website. For instance, if the status code of the website is <code>418</code>, the status description associated with this status code will be <code>&quot;I&#39;m a teapot&quot;</code>. It returns a <code>string</code> value.</p>`,15),v={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"},h=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">url</td><td style="text-align:center;">The URL of the website</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> status <span class="token operator">=</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusCode</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> description <span class="token operator">=</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusDescription</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; - &quot;</span> <span class="token operator">+</span> description<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected output:</span>
<span class="token comment">// 200 - OK</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> status <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> NetworkConnection<span class="token punctuation">.</span>GetWebPageStatusCode<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> description <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> NetworkConnection<span class="token punctuation">.</span>GetWebPageStatusDescription<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span>

Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span>status<span class="token punctuation">.</span>ToString<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">&quot; - &quot;</span> <span class="token operator">&amp;</span> description<span class="token punctuation">)</span>
<span class="token comment">&#39; Expected output:</span>
<span class="token comment">&#39; 200 - OK</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p><h3 id="h-getwebpagestatusdescriptionasync" tabindex="-1"><a class="header-anchor" href="#h-getwebpagestatusdescriptionasync" aria-hidden="true">#</a> h. GetWebPageStatusDescriptionAsync</h3><p><strong>This method is available in version 4.5 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetWebPageStatusDescriptionAsync()</code> method allows you to get the status description of a specified website asynchronously. For instance, if the status code of the website is <code>418</code>, the status description associated with this status code will be <code>&quot;I&#39;m a teapot&quot;</code>. It returns a <code>string</code> value.</p>`,14),b={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"},y=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusDescriptionAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">url</td><td style="text-align:center;">The URL of the website</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">internal</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token class-name"><span class="token keyword">int</span></span> status <span class="token operator">=</span> <span class="token keyword">await</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusCodeAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name"><span class="token keyword">string</span></span> description <span class="token operator">=</span> <span class="token keyword">await</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">GetWebPageStatusDescriptionAsync</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>status<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; - &quot;</span> <span class="token operator">+</span> description<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Expected output:</span>
    <span class="token comment">// 200 - OK</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Friend</span> Async <span class="token keyword">Function</span> Main<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> status <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> Await NetworkConnection<span class="token punctuation">.</span>GetWebPageStatusCodeAsync<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">Dim</span> description <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> Await NetworkConnection<span class="token punctuation">.</span>GetWebPageStatusDescriptionAsync<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span>
    
    Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span>status<span class="token punctuation">.</span>ToString<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token string">&quot; - &quot;</span> <span class="token operator">&amp;</span> description<span class="token punctuation">)</span>

    <span class="token comment">&#39; Expected output:</span>
    <span class="token comment">&#39; 200 - OK</span>
<span class="token keyword">End</span> <span class="token keyword">Function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p><h3 id="i-getstatuscodetype" tabindex="-1"><a class="header-anchor" href="#i-getstatuscodetype" aria-hidden="true">#</a> i. GetStatusCodeType</h3><p><strong>This method is available in version 4.1 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetStatusCodeType()</code> method allows you to get the &quot;type&quot; of a status code. For instance, if the status code is between 100 and 199, the method will return <code>StatusCodeType.Informational</code>. It returns a <a href="#"><code>StatusCodeType</code></a> enum value.</p>`,14),m={href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",target:"_blank",rel:"noopener noreferrer"},x=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">GetStatusCodeType</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">url</td><td style="text-align:center;">The URL of the website</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">GetStatusCodeType</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> StatusCodeType<span class="token punctuation">.</span>Success<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;The request was successful!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">GetStatusCodeType</span><span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span> <span class="token operator">==</span> StatusCodeType<span class="token punctuation">.</span>ClientError<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;The request was not successful!&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">If</span> NetworkConnection<span class="token punctuation">.</span>GetStatusCodeType<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span><span class="token punctuation">)</span> <span class="token operator">=</span> StatusCodeType<span class="token punctuation">.</span>Success <span class="token keyword">Then</span>
    Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;The request was successful!&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">ElseIf</span> NetworkConnection<span class="token punctuation">.</span>GetStatusCodeType<span class="token punctuation">(</span><span class="token string">&quot;https://leocorporation.dev&quot;</span> <span class="token operator">=</span> StatusCodeType<span class="token punctuation">.</span>ClientError<span class="token punctuation">)</span> <span class="token keyword">Then</span>
    Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;The request was not successful!&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">If</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p><h3 id="j-downloadfileasync" tabindex="-1"><a class="header-anchor" href="#j-downloadfileasync" aria-hidden="true">#</a> j. DownloadFileAsync</h3><p><strong>This method is available in version 4.4 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>DownloadFileAsync()</code> method allows you to download any files from the Internet using the <code>HttpClient</code> class instead of the <code>WebClient</code> class. It doesn&#39;t return any value (<code>Task</code>).</p>`,14),w={class:"custom-container tip"},f=n("p",{class:"custom-container-title"},"See also",-1),C={href:"https://docs.microsoft.com/en-us/dotnet/core/compatibility/networking/6.0/webrequest-deprecated",target:"_blank",rel:"noopener noreferrer"},T=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>NetworkConnection<span class="token punctuation">.</span><span class="token function">DownloadFileAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">Uri</td><td style="text-align:center;">uri</td><td style="text-align:center;">The URI of the file to download</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">filePath</td><td style="text-align:center;">The path where to store the file once downloaded</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">await</span> NetworkConnection<span class="token punctuation">.</span><span class="token function">DownloadFileAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span><span class="token string">&quot;https://example.com/file.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">@&quot;C:\\myFile.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Private</span> Async <span class="token keyword">Function</span> Main<span class="token punctuation">(</span><span class="token punctuation">)</span>
    Await NetworkConnection<span class="token punctuation">.</span>DownloadFileAsync<span class="token punctuation">(</span><span class="token keyword">New</span> Uri<span class="token punctuation">(</span><span class="token string">&quot;https://example.com/file.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;C:\\myFile.pdf&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">End</span> <span class="token keyword">Function</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#networkconnection">Go to top</a></p>`,10);function q(L,N){const e=i("ExternalLinkIcon");return p(),c("div",null,[r,n("p",null,[n("a",d,[t("Learn more about status codes"),a(e)]),t(".")]),u,n("p",null,[n("a",k,[t("Learn more about status codes"),a(e)]),t(".")]),g,n("p",null,[n("a",v,[t("Learn more about status codes"),a(e)]),t(".")]),h,n("p",null,[n("a",b,[t("Learn more about status codes"),a(e)]),t(".")]),y,n("p",null,[n("a",m,[t("Learn more about status codes"),a(e)]),t(".")]),x,n("div",w,[f,n("p",null,[n("a",C,[t("WebRequest, WebClient, and ServicePoint are obsolete"),a(e)])])]),T])}const S=o(l,[["render",q],["__file","Verify-an-internet-connection.html.vue"]]);export{S as default};
