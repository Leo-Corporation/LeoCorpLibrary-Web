(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{391:function(t,e,s){"use strict";s.r(e);var a=s(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"unitsconversions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unitsconversions"}},[t._v("#")]),t._v(" UnitsConversions")]),t._v(" "),s("h2",{attrs:{id:"introduction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),s("p",[t._v("To use these methods and features, do not forget to put this line of code on top of your code file:")]),t._v(" "),s("p",[t._v("C#")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("LeoCorpLibrary")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("VB")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Imports")]),t._v(" LeoCorpLibrary\n")])])]),s("h1",{attrs:{id:"unitsconversions-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unitsconversions-2"}},[t._v("#")]),t._v(" UnitsConversions")]),t._v(" "),s("h2",{attrs:{id:"methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),s("h3",{attrs:{id:"a-milestokm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-milestokm"}},[t._v("#")]),t._v(" a. MilesToKm")]),t._v(" "),s("p",[s("strong",[t._v("This function is available in version 3.9 and higher.")])]),t._v(" "),s("details",[s("summary",[t._v("Compatibility")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Framework")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary.Core")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET 5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Core 3.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.7.2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("❌")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])])]),t._v(" "),s("p",[t._v("This methods allows you to convert miles to kilometers. It returns a "),s("code",[t._v("double")]),t._v(" value.")]),t._v(" "),s("p",[t._v("It's in:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("LeoCorpLibrary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MilesToKm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This method has one argument:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Argument")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("miles")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Number of mile(s) to convert")])])])]),t._v(" "),s("p",[t._v("Here's an example of usage:")]),t._v(" "),s("p",[t._v("C#")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")])]),t._v(" km "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MilesToKm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 16.09344 km")]),t._v("\n")])])]),s("p",[t._v("VB")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" km "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MilesToKm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' 16.09344 km")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"#unitsconversions"}},[t._v("Go to top")])]),t._v(" "),s("h3",{attrs:{id:"b-kmtomiles"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-kmtomiles"}},[t._v("#")]),t._v(" b. KmToMiles")]),t._v(" "),s("p",[s("strong",[t._v("This function is available in version 3.9 and higher.")])]),t._v(" "),s("details",[s("summary",[t._v("Compatibility")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Framework")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary.Core")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET 5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Core 3.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.7.2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("❌")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])])]),t._v(" "),s("p",[t._v("This method allows you to convert kilometers to miles. It return a "),s("code",[t._v("double")]),t._v("value.")]),t._v(" "),s("p",[t._v("It's in:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("LeoCorpLibrary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("KmToMiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This method has one argument:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Argument")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("kilometers")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Number of kilometers(s) to convert")])])])]),t._v(" "),s("p",[t._v("Here's an example of usage:")]),t._v(" "),s("p",[t._v("C#")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")])]),t._v(" miles "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("KmToMiles")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected result :")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6.2137119223733395 miles")]),t._v("\n")])])]),s("p",[t._v("VB")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" miles "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("KmToMiles"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Expected result :")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' 6.2137119223733395 miles")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"#unitsconversions"}},[t._v("Go to top")])]),t._v(" "),s("h3",{attrs:{id:"c-celsiustofahrenheit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-celsiustofahrenheit"}},[t._v("#")]),t._v(" c. CelsiusToFahrenheit")]),t._v(" "),s("p",[s("strong",[t._v("This function is available in version 3.9 and higher.")])]),t._v(" "),s("details",[s("summary",[t._v("Compatibility")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Framework")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary.Core")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET 5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Core 3.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.7.2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("❌")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])])]),t._v(" "),s("p",[t._v("This method allows you to convert Celsius (°C) to Fahrenheit (°F). It returns a "),s("code",[t._v("double")]),t._v(" value.")]),t._v(" "),s("p",[t._v("It's in:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("LeoCorpLibrary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CelsiusToFahrenheit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This method has one argument:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Argument")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("celsius")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Number of celsius to convert")])])])]),t._v(" "),s("p",[t._v("Here's an example of usage:")]),t._v(" "),s("p",[t._v("C#")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")])]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CelsiusToFahrenheit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 77°F")]),t._v("\n")])])]),s("p",[t._v("VB")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CelsiusToFahrenheit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' 77°F")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"#unitsconversions"}},[t._v("Go to top")])]),t._v(" "),s("h3",{attrs:{id:"d-fahrenheittocelsius"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#d-fahrenheittocelsius"}},[t._v("#")]),t._v(" d. FahrenheitToCelsius")]),t._v(" "),s("p",[s("strong",[t._v("This function is available in version 3.9 and higher.")])]),t._v(" "),s("details",[s("summary",[t._v("Compatibility")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Framework")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary.Core")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET 5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Core 3.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.7.2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("❌")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])])]),t._v(" "),s("p",[t._v("This method allows you to convert Fahrenheit (°F) to Celsius (°C). It returns a "),s("code",[t._v("double")]),t._v(" value.")]),t._v(" "),s("p",[t._v("It's in:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("LeoCorpLibrary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FahrenheitToCelsius")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This method has one argument:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Argument")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("fahrenheit")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Number of fahrenheit to convert")])])])]),t._v(" "),s("p",[t._v("Here's an example of usage:")]),t._v(" "),s("p",[t._v("C#")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")])]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("FahrenheitToCelsius")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("68")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 20°C")]),t._v("\n")])])]),s("p",[t._v("VB")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FahrenheitToCelsius"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("68")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' 20°C")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"#unitsconversions"}},[t._v("Go to top")])]),t._v(" "),s("h3",{attrs:{id:"e-m3tolitre"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#e-m3tolitre"}},[t._v("#")]),t._v(" e. M3ToLitre")]),t._v(" "),s("p",[s("strong",[t._v("This function is available in version 3.9 and higher.")])]),t._v(" "),s("details",[s("summary",[t._v("Compatibility")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Framework")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary.Core")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET 5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Core 3.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.7.2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("❌")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])])]),t._v(" "),s("p",[t._v("This method allows you to convert Cubic meters (m³) to Litre (L). It returns a "),s("code",[t._v("double")]),t._v(" value.")]),t._v(" "),s("p",[t._v("It's in:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("LeoCorpLibrary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("M3ToLitre")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This method has one argument:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Argument")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("m3")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Number of cubic meter(s) to convert")])])])]),t._v(" "),s("p",[t._v("Here's an example of usage:")]),t._v(" "),s("p",[t._v("C#")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")])]),t._v(" l "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("M3ToLitre")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10000L")]),t._v("\n")])])]),s("p",[t._v("VB")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" l "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("M3ToLitre"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' 10000L")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"#unitsconversions"}},[t._v("Go to top")])]),t._v(" "),s("h3",{attrs:{id:"f-litretom3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#f-litretom3"}},[t._v("#")]),t._v(" f. LitreToM3")]),t._v(" "),s("p",[s("strong",[t._v("This function is available in version 3.9 and higher.")])]),t._v(" "),s("details",[s("summary",[t._v("Compatibility")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Framework")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("LeoCorpLibrary.Core")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET 5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Core 3.1")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.7.2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v(".NET Framework 4.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("❌")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("✔")])])])])]),t._v(" "),s("p",[t._v("This method allows you to convert Litre (L) to Cubic meters (m³). It returns a "),s("code",[t._v("double")]),t._v(" value.")]),t._v(" "),s("p",[t._v("It's in:")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[t._v("LeoCorpLibrary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("LitreToM3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This method has one argument:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Argument")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Number of mile(s) to convert")])])])]),t._v(" "),s("p",[t._v("Here's an example of usage:")]),t._v(" "),s("p",[t._v("C#")]),t._v(" "),s("div",{staticClass:"language-cs extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cs"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")])]),t._v(" m3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("LitreToM3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.5 m³")]),t._v("\n")])])]),s("p",[t._v("VB")]),t._v(" "),s("div",{staticClass:"language-vb extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vb"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Dim")]),t._v(" m3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("As")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" UnitsConversions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LitreToM3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2500")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' Expected result:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("' 2.5 m³")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"#unitsconversions"}},[t._v("Go to top")])])])}),[],!1,null,null,null);e.default=n.exports}}]);