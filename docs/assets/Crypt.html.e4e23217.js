import{_ as n,o as s,c as t,a}from"./app.89131f9d.js";const e={},p=a(`<h1 id="crypt" tabindex="-1"><a class="header-anchor" href="#crypt" aria-hidden="true">#</a> Crypt</h1><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>To use the following methods, you need to use the version 2.6 or higher of LeoCorpLibrary, and put this in your &quot;using&quot; region:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">LeoCorpLibrary</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Imports</span> LeoCorpLibrary
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="functions" tabindex="-1"><a class="header-anchor" href="#functions" aria-hidden="true">#</a> Functions</h2><h3 id="a-encrypt" tabindex="-1"><a class="header-anchor" href="#a-encrypt" aria-hidden="true">#</a> a. Encrypt</h3><p><strong>This function is available in version 2.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>Encrypt()</code> method allows you to encrypt a <code>string</code>. It returns a <code>string</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">Encrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">source</td><td style="text-align:center;">The string to encrypt</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">key</td><td style="text-align:center;">The key that will be used to encrypt and decrypt the string</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> encrypted <span class="token operator">=</span> LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">Encrypt</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">&quot;ABC123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Output: jqPW4uxt8hk=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> s <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;Hello!&quot;</span>
<span class="token keyword">Dim</span> encrypted <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span>Encrypt<span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">&quot;ABC123&quot;</span><span class="token punctuation">)</span>

<span class="token comment">&#39; Output: jqPW4uxt8hk=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#crypt">Go to top</a></p><h3 id="b-decrypt" tabindex="-1"><a class="header-anchor" href="#b-decrypt" aria-hidden="true">#</a> b. Decrypt</h3><p><strong>This function is available in version 2.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>Decrypt()</code> method allows you to decrypt an encrypted string. It returns a <code>string</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">Decrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">encrypt</td><td style="text-align:center;">The encrypted string</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">key</td><td style="text-align:center;">The key that will be used to encrypt and decrypt the string</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> encrypted <span class="token operator">=</span> <span class="token string">&quot;jqPW4uxt8hk=&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> decrypted <span class="token operator">=</span> LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">Decrypt</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">,</span> <span class="token string">&quot;ABC123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Output: Hello!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> encrypted <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;jqPW4uxt8hk=&quot;</span>
<span class="token keyword">Dim</span> decrypted <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span>Decrypt<span class="token punctuation">(</span>encrypted<span class="token punctuation">,</span> <span class="token string">&quot;ABC123&quot;</span><span class="token punctuation">)</span>

<span class="token comment">&#39; Output: Hello!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#crypt">Go to top</a></p><h3 id="c-encryptrsa" tabindex="-1"><a class="header-anchor" href="#c-encryptrsa" aria-hidden="true">#</a> c. EncryptRSA</h3><p><strong>This function is available in version 3.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>EncryptRSA()</code> method allows you to encrypt a string using RSA encryption. It returns a <code>byte[]</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">EncryptRSA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">str</td><td style="text-align:center;">The string to encrypt</td></tr><tr><td style="text-align:center;">RSAParameters</td><td style="text-align:center;">rsaParameters</td><td style="text-align:center;">The RSA key</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography</span><span class="token punctuation">;</span>

<span class="token class-name">RSACryptoServiceProvider</span> cryptoServiceProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RSACryptoServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">=</span> <span class="token string">&quot;LeoCorpLibrary&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> encrypt <span class="token operator">=</span> Crypt<span class="token punctuation">.</span><span class="token function">EncryptRSA</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> cryptoServiceProvider<span class="token punctuation">.</span><span class="token function">ExportParameters</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Raw: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">str</span><span class="token punctuation">}</span></span><span class="token string">\\nEncrypted: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Crypt<span class="token punctuation">.</span><span class="token function">ConvertBytesToString</span><span class="token punctuation">(</span>encrypt<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography

<span class="token keyword">Dim</span> cryptoServiceProvider <span class="token keyword">As</span> RSACryptoServiceProvider <span class="token operator">=</span> <span class="token keyword">New</span> RSACryptoServiceProvider<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">Dim</span> str <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;LeoCorpLibrary&quot;</span>
<span class="token keyword">Dim</span> encrypt <span class="token keyword">As</span> <span class="token keyword">Byte</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> Crypt<span class="token punctuation">.</span>EncryptRSA<span class="token punctuation">(</span>str<span class="token punctuation">,</span> cryptoServiceProvider<span class="token punctuation">.</span>ExportParameters<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">$&quot;Raw: &quot;</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">&quot;\\nEncrypted: &quot;</span> <span class="token operator">+</span> Crypt<span class="token punctuation">.</span>ConvertBytesToString<span class="token punctuation">(</span>encrypt<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#crypt">Go to top</a></p><h3 id="d-decryptrsa" tabindex="-1"><a class="header-anchor" href="#d-decryptrsa" aria-hidden="true">#</a> d. DecryptRSA</h3><p><strong>This function is available in version 3.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>DecryptRSA()</code> method allows you to decrypt a string using RSA encryption. It returns a <code>byte[]</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">DecryptRSA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">byte[]</td><td style="text-align:center;">encrypt</td><td style="text-align:center;">The encrypted string</td></tr><tr><td style="text-align:center;">RSAParameters</td><td style="text-align:center;">rsaParameters</td><td style="text-align:center;">The RSA key</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography</span><span class="token punctuation">;</span>

<span class="token class-name">RSACryptoServiceProvider</span> cryptoServiceProvider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">RSACryptoServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">=</span> <span class="token string">&quot;LeoCorpLibrary&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> encrypt <span class="token operator">=</span> Crypt<span class="token punctuation">.</span><span class="token function">EncryptRSA</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> cryptoServiceProvider<span class="token punctuation">.</span><span class="token function">ExportParameters</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> decrypt <span class="token operator">=</span> Crypt<span class="token punctuation">.</span><span class="token function">DecryptRSA</span><span class="token punctuation">(</span>encrypt<span class="token punctuation">,</span> cryptoServiceProvider<span class="token punctuation">.</span><span class="token function">ExportParameters</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Raw: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">str</span><span class="token punctuation">}</span></span><span class="token string">\\nEncrypted: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Crypt<span class="token punctuation">.</span><span class="token function">ConvertBytesToString</span><span class="token punctuation">(</span>encrypt<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">\\nDecrypted: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Crypt<span class="token punctuation">.</span><span class="token function">ConvertBytesToString</span><span class="token punctuation">(</span>decrypt<span class="token punctuation">)</span></span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Imports</span> System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography

<span class="token keyword">Dim</span> cryptoServiceProvider <span class="token keyword">As</span> RSACryptoServiceProvider <span class="token operator">=</span> <span class="token keyword">New</span> RSACryptoServiceProvider<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">Dim</span> str <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;LeoCorpLibrary&quot;</span>
<span class="token keyword">Dim</span> encrypt <span class="token keyword">As</span> <span class="token keyword">Byte</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> Crypt<span class="token punctuation">.</span>EncryptRSA<span class="token punctuation">(</span>str<span class="token punctuation">,</span> cryptoServiceProvider<span class="token punctuation">.</span>ExportParameters<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> decrypt <span class="token keyword">As</span> <span class="token keyword">Byte</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> Crypt<span class="token punctuation">.</span>DecryptRSA<span class="token punctuation">(</span>encrypt<span class="token punctuation">,</span> cryptoServiceProvider<span class="token punctuation">.</span>ExportParameters<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">$&quot;Raw: &quot;</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">&quot;\\nEncrypted: &quot;</span> <span class="token operator">+</span> Crypt<span class="token punctuation">.</span>ConvertBytesToString<span class="token punctuation">(</span>encrypt<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\nDecrypted: &quot;</span> <span class="token operator">+</span> Crypt<span class="token punctuation">.</span>ConvertBytesToString<span class="token punctuation">(</span>decrypt<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#crypt">Go to top</a></p><h2 id="e-encryptaes" tabindex="-1"><a class="header-anchor" href="#e-encryptaes" aria-hidden="true">#</a> e. EncryptAES</h2><p><strong>This function is available in version 3.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>EncryptAES()</code> method allows you to encrypt a string using AES encryption. It returns a <code>string</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">EncryptAES</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">str</td><td style="text-align:center;">The string to encrypt</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">key</td><td style="text-align:center;">The key that will be used to encrypt and decrypt the string</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">=</span> <span class="token string">&quot;LeoCorpLibrary&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> encrypt <span class="token operator">=</span> Crypt<span class="token punctuation">.</span><span class="token function">EncryptAES</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> decrypt <span class="token operator">=</span> Crypt<span class="token punctuation">.</span><span class="token function">DecryptAES</span><span class="token punctuation">(</span>encrypt<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Raw: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">str</span><span class="token punctuation">}</span></span><span class="token string">\\nEncrypted: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">encrypt</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> str <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;LeoCorpLibrary&quot;</span>
<span class="token keyword">Dim</span> encrypt <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> Crypt<span class="token punctuation">.</span>EncryptAES<span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> decrypt <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> Crypt<span class="token punctuation">.</span>DecryptAES<span class="token punctuation">(</span>encrypt<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span>
Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;Raw: &quot;</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">&quot;\\nEncrypted: &quot;</span> <span class="token operator">+</span> encrypt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#crypt">Go to top</a></p><h3 id="f-decryptaes" tabindex="-1"><a class="header-anchor" href="#f-decryptaes" aria-hidden="true">#</a> f. DecryptAES</h3><p><strong>This function is available in version 3.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>DecryptAES()</code> method allows you to decrypt a string using AES encryption. It returns a <code>string</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">Decrypt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">encrypted</td><td style="text-align:center;">The encrypted string</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">key</td><td style="text-align:center;">The key that will be used to encrypt and decrypt the string</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">=</span> <span class="token string">&quot;LeoCorpLibrary&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> encrypt <span class="token operator">=</span> Crypt<span class="token punctuation">.</span><span class="token function">EncryptAES</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> decrypt <span class="token operator">=</span> Crypt<span class="token punctuation">.</span><span class="token function">DecryptAES</span><span class="token punctuation">(</span>encrypt<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Raw: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">str</span><span class="token punctuation">}</span></span><span class="token string">\\nEncrypted: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">encrypt</span><span class="token punctuation">}</span></span><span class="token string">\\nDecrypted: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">decrypt</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> str <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;LeoCorpLibrary&quot;</span>
<span class="token keyword">Dim</span> encrypt <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> Crypt<span class="token punctuation">.</span>EncryptAES<span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">Dim</span> decrypt <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> Crypt<span class="token punctuation">.</span>DecryptAES<span class="token punctuation">(</span>encrypt<span class="token punctuation">,</span> <span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span>

Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span><span class="token string">&quot;Raw: &quot;</span> <span class="token operator">+</span> str <span class="token operator">+</span> <span class="token string">&quot;\\nEncrypted: &quot;</span> <span class="token operator">+</span> encrypt <span class="token operator">+</span> <span class="token string">&quot;\\nDecrypted: &quot;</span> <span class="token operator">+</span> decrypt<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#crypt">Go to top</a></p><h2 id="extensions" tabindex="-1"><a class="header-anchor" href="#extensions" aria-hidden="true">#</a> Extensions</h2><p>The <code>Encrypt()</code> and <code>Decrypt()</code> methods are also available as extensions of the <code>string</code> type. They can be used when you import the <code>LeoCorpLibrary.Extensions</code> namespace.</p><p><a href="/Extensions">Click here</a> to go to the Extensions page.</p><p><a href="#crypt">Go to top</a></p>`,96),o=[p];function r(c,l){return s(),t("div",null,o)}const d=n(e,[["render",r],["__file","Crypt.html.vue"]]);export{d as default};
