import{_ as t,o as e,c as n,a}from"./app.397e6efa.js";const s={},l=a(`<h1 id="maths" tabindex="-1"><a class="header-anchor" href="#maths" aria-hidden="true">#</a> Maths</h1><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>To uses these functions and features, do not forget to put this line of code in your &quot;using&quot; region:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">LeoCorpLibrary</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Imports</span> LeoCorpLibrary
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="maths-functions" tabindex="-1"><a class="header-anchor" href="#maths-functions" aria-hidden="true">#</a> Maths Functions</h2><p>There are multiple functions available in this part of LeoCorpLibrary.</p><h3 id="a-sum" tabindex="-1"><a class="header-anchor" href="#a-sum" aria-hidden="true">#</a> a. Sum</h3><p><strong>This function is available in version 1.3 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>Sum()</code> method enables you to do a sum of <code>double</code> numbers.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>You need to specify the numbers which you wanna get the sum of, in the argument section of the method.</p><div class="custom-container tip"><p class="custom-container-title">Note</p><p>You can specify negative numbers.</p></div><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> numberSum <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">Sum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> numberSum <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Sum<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getbiggestnumber" tabindex="-1"><a class="header-anchor" href="#b-getbiggestnumber" aria-hidden="true">#</a> b. GetBiggestNumber</h3><p><strong>This function is available in version 1.3 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetBiggestNumber()</code> allows you to get the biggest number among <code>double</code> numbers that are specified. Returns a <code>double</code>value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">GetBiggestNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Note</p><p>You can use negative numbers</p></div><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> biggestNumber <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">GetBiggestNumber</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> biggestNumber <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>GetBiggestNumber<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="c-getlowestnumber" tabindex="-1"><a class="header-anchor" href="#c-getlowestnumber" aria-hidden="true">#</a> c. GetLowestNumber</h3><p><strong>This function is available in version 1.3.1 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetLowestNumber()</code> method allows you to get the lowest number among <code>double</code> numbers that are specified. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">GetLowestNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Note</p><p>You can use negative numbers.</p></div><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> lowestNumber <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">GetLowestNumber</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2.32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> lowestNumber <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>GetLowestNumber<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2.32</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="d-radianstodegrees" tabindex="-1"><a class="header-anchor" href="#d-radianstodegrees" aria-hidden="true">#</a> d. RadiansToDegrees</h3><p><strong>This function is available in version 3.5 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>RadiansToDegrees()</code> method allows you to convert radians to degrees. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">RadiansToDegrees</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radians</td><td style="text-align:center;">Radians to convert</td><td style="text-align:center;">1.5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> degrees <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">RadiansToDegrees</span><span class="token punctuation">(</span><span class="token number">1.57079633</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 90\xB0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> degrees <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span>  Maths<span class="token punctuation">.</span>RadiansToDegrees<span class="token punctuation">(</span><span class="token number">1.57079633</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 90\xB0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="e-degreestoradians" tabindex="-1"><a class="header-anchor" href="#e-degreestoradians" aria-hidden="true">#</a> e. DegreesToRadians</h3><p><strong>This function is available in version 3.5 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>DegreesToRadians()</code> method allows you to convert degrees to radians. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">DegreesToRadians</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">degrees</td><td style="text-align:center;">Degrees to convert</td><td style="text-align:center;">60</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> degrees <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">DegreesToRadians</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 1.57079633</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> degrees <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span>  Maths<span class="token punctuation">.</span>DegreesToRadians<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 1.57079633</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="e-isinteger" tabindex="-1"><a class="header-anchor" href="#e-isinteger" aria-hidden="true">#</a> e. IsInteger</h3><p><strong>This function is available in version 3.11 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>IsInteger()</code> method allows you to check if a <code>double</code> number is an integer (<code>int</code>) or not.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">IsInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has one argument:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">number</td><td style="text-align:center;">The number to test</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">bool</span></span> isInt <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">IsInteger</span><span class="token punctuation">(</span><span class="token number">10.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// isInt = false</span>

<span class="token class-name"><span class="token keyword">bool</span></span> isInt2 <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">IsInteger</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// IsInt2 = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> isInt <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>IsInteger<span class="token punctuation">(</span><span class="token number">10.5</span><span class="token punctuation">)</span>;
<span class="token comment">&#39; isInt = false</span>

<span class="token keyword">Dim</span> isInt2 <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>IsInteger<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>;
<span class="token comment">&#39; IsInt2 = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="f-getopposite" tabindex="-1"><a class="header-anchor" href="#f-getopposite" aria-hidden="true">#</a> f. GetOpposite</h3><p><strong>This function is available in version 4.2 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetOpposite()</code> method allows you to get the opposite of a specified number. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">GetOpposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">Note</p><p>You can use negative numbers.</p></div><p>This method has one argument:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">n</td><td style="text-align:center;">The number to get the opposite</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> x <span class="token operator">=</span> <span class="token number">54</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> oppositeOfX <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">GetOpposite</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// oppositeOfX = -54</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> x <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">54</span>
<span class="token keyword">Dim</span> oppositeOfX <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>GetOpposite<span class="token punctuation">(</span>x<span class="token punctuation">)</span>

<span class="token comment">&#39; oppositeOfX = -54</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="g-factorial" tabindex="-1"><a class="header-anchor" href="#g-factorial" aria-hidden="true">#</a> g. Factorial</h3><p><strong>This function is available in version 4.2 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>Factorial()</code> method allows you to get the factorial of a specified number. It returns an <code>int</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">Factorial</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Remark</p><p>If the factorial of the specified number is greater than <code>int.MaxValue</code>, the method will either return 0, or a wrong result.</p></div><p>This method has one argument:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">n</td><td style="text-align:center;">The number to get the factorial</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span></span> f <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">Factorial</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// f = 520</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> x <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">5</span>
<span class="token keyword">Dim</span> f <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Factorial<span class="token punctuation">(</span>x<span class="token punctuation">)</span>

<span class="token comment">&#39; f = 520</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="h-getpositive" tabindex="-1"><a class="header-anchor" href="#h-getpositive" aria-hidden="true">#</a> h. GetPositive</h3><p><strong>This function is available in version 4.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetPositive()</code> method allows you to get the positive of a specified number. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">GetPositive</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has one argument:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">n</td><td style="text-align:center;">The number to get the positive</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">54</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> positiveOfX <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">GetPositive</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// positiveOfX = 54</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> x <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">54</span>
<span class="token keyword">Dim</span> positiveOfX <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>GetPositive<span class="token punctuation">(</span>x<span class="token punctuation">)</span>

<span class="token comment">&#39; positiveOfX = 54</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="i-getnegative" tabindex="-1"><a class="header-anchor" href="#i-getnegative" aria-hidden="true">#</a> i. GetNegative</h3><p><strong>This function is available in version 4.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetNegative()</code> method allows you to get the negative of a specified number. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">GetNegative</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has one argument:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">n</td><td style="text-align:center;">The number to get the negative</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> x <span class="token operator">=</span> <span class="token number">54</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> negativeOfX <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">GetNegative</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// negativeOfX = -54</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> x <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">54</span>
<span class="token keyword">Dim</span> negativeOfX <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>GetNegative<span class="token punctuation">(</span>x<span class="token punctuation">)</span>

<span class="token comment">&#39; negativeOfX = -54</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="j-getresultsof" tabindex="-1"><a class="header-anchor" href="#j-getresultsof" aria-hidden="true">#</a> j. GetResultsOf</h3><p><strong>This function is available in version 4.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetResultsOf()</code> method allows you to get the results of a specified function once applied to specified numbers. It returns an array <code>double[]</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">GetResultsOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Func&lt;double, double&gt;</code></td><td style="text-align:center;">function</td><td style="text-align:center;">The function to apply</td></tr><tr><td style="text-align:center;"><code>params double[]</code></td><td style="text-align:center;">numbers</td><td style="text-align:center;">The numbers you want to get the results after applying a specific function</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> results <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">GetResultsOf</span><span class="token punctuation">(</span>x <span class="token operator">=&gt;</span> x <span class="token operator">*</span> x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// results = { 1, 4, 9, 16, 25 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> results <span class="token keyword">As</span> <span class="token keyword">Double</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>GetResultsOf<span class="token punctuation">(</span><span class="token keyword">Function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> x <span class="token operator">*</span> x<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

<span class="token comment">&#39; results = { 1, 4, 9, 16, 25 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="k-ispositive" tabindex="-1"><a class="header-anchor" href="#k-ispositive" aria-hidden="true">#</a> k. IsPositive</h3><p><strong>This function is available in version 4.7 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>IsPositive()</code> method allows you to get if a specified number is positive or not. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">IsPositive</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">n</td><td style="text-align:center;">The number to check</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> n <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">bool</span></span> isPositive <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">IsPositive</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// isPositive = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> n <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">45</span>
<span class="token keyword">Dim</span> isPositive <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>IsPositive<span class="token punctuation">(</span>n<span class="token punctuation">)</span>

<span class="token comment">&#39; isPositive = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="l-isnegative" tabindex="-1"><a class="header-anchor" href="#l-isnegative" aria-hidden="true">#</a> l. IsNegative</h3><p><strong>This function is available in version 4.7 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>IsNegative()</code> method allows you to get if a specified number is negative or not. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span><span class="token function">IsNegative</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">n</td><td style="text-align:center;">The number to check</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> n <span class="token operator">=</span> <span class="token number">45</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">bool</span></span> isNegative <span class="token operator">=</span> Maths<span class="token punctuation">.</span><span class="token function">IsNegative</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// isNegative = false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> n <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">45</span>
<span class="token keyword">Dim</span> isNegative <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>IsNegative<span class="token punctuation">(</span>n<span class="token punctuation">)</span>

<span class="token comment">&#39; isNegative = false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="circle" tabindex="-1"><a class="header-anchor" href="#circle" aria-hidden="true">#</a> Circle</h2><h3 id="a-getarea" tabindex="-1"><a class="header-anchor" href="#a-getarea" aria-hidden="true">#</a> a. GetArea</h3><p><strong>This function is available in version 1.3 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetArea()</code> method allows you to get the area of circle. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Circle<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radius</td><td style="text-align:center;">Circle&#39;s radius</td><td style="text-align:center;">15.12</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> circleArea <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Circle<span class="token punctuation">.</span><span class="token function">GetCircleArea</span><span class="token punctuation">(</span><span class="token number">12.458</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> circleArea <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Circle<span class="token punctuation">.</span>GetCircleArea<span class="token punctuation">(</span><span class="token number">12.458</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getperimeter" tabindex="-1"><a class="header-anchor" href="#b-getperimeter" aria-hidden="true">#</a> b. GetPerimeter</h3><p><strong>This function is available in version 1.3 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetPerimeter()</code> allows you to get the perimeter of a circle. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Circle<span class="token punctuation">.</span><span class="token function">GetPerimeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radius</td><td style="text-align:center;">Circle&#39;s radius</td><td style="text-align:center;">14.1</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> circlePerimeter <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Circle<span class="token punctuation">.</span><span class="token function">GetPerimeter</span><span class="token punctuation">(</span><span class="token number">11.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> circlePerimeter <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Circle<span class="token punctuation">.</span>GetPerimeter<span class="token punctuation">(</span><span class="token number">11.2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="rectangle" tabindex="-1"><a class="header-anchor" href="#rectangle" aria-hidden="true">#</a> Rectangle</h2><h3 id="a-getdiagonal" tabindex="-1"><a class="header-anchor" href="#a-getdiagonal" aria-hidden="true">#</a> a. GetDiagonal</h3><p><strong>This function is available in version 3.2 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetDiagonal()</code> method allows you to get a rectangle&#39;s diagonal. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span><span class="token function">GetDiagonal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">width</td><td style="text-align:center;">Rectangle&#39;s width/base</td><td style="text-align:center;">4.12</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">length</td><td style="text-align:center;">Rectangle&#39;s length</td><td style="text-align:center;">8.5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> diagonal <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span><span class="token function">GetDiagonal</span><span class="token punctuation">(</span><span class="token number">4.12</span><span class="token punctuation">,</span> <span class="token number">8.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Get diagonal</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> diagonal <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span>GetDiagonal<span class="token punctuation">(</span><span class="token number">4.12</span><span class="token punctuation">,</span> <span class="token number">8.5</span><span class="token punctuation">)</span> <span class="token comment">&#39; Get diagonal</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getarea" tabindex="-1"><a class="header-anchor" href="#b-getarea" aria-hidden="true">#</a> b. GetArea</h3><p><strong>This function is available in version 3.10 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetArea()</code> method allows you to get a rectangle&#39;s area. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">width</td><td style="text-align:center;">Rectangle&#39;s width/base</td><td style="text-align:center;">6</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">length</td><td style="text-align:center;">Rectangle&#39;s length</td><td style="text-align:center;">12.2</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> area <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// area = 50</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> area <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span>GetArea<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">&#39; area = 50</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="triangle" tabindex="-1"><a class="header-anchor" href="#triangle" aria-hidden="true">#</a> Triangle</h2><h3 id="a-getarea-1" tabindex="-1"><a class="header-anchor" href="#a-getarea-1" aria-hidden="true">#</a> a. GetArea</h3><p><strong>This function is available in version 1.3 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetArea()</code> method allows you to get the area of a triangle. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">height</td><td style="text-align:center;">Triangle&#39;s height</td><td style="text-align:center;">5.48</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">width</td><td style="text-align:center;">Triangle&#39;s width/base</td><td style="text-align:center;">4.12</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> triangleArea <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token number">5.48</span><span class="token punctuation">,</span> <span class="token number">4.12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> triangleArea <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span>GetArea<span class="token punctuation">(</span><span class="token number">5.48</span><span class="token punctuation">,</span> <span class="token number">4.12</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getperimeter-1" tabindex="-1"><a class="header-anchor" href="#b-getperimeter-1" aria-hidden="true">#</a> b. GetPerimeter</h3><p><strong>This function is available in version 1.3 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetPerimeter()</code> method allows you to get the perimeter of a triangle. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">GetPerimeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has three arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side1</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">5.48</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">side2</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">4.12</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">side3</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">6</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> trianglePerimeter <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">GetPerimeter</span><span class="token punctuation">(</span><span class="token number">5.48</span><span class="token punctuation">,</span> <span class="token number">4.12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> trianglePerimeter <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span>GetPerimeter<span class="token punctuation">(</span><span class="token number">5.48</span><span class="token punctuation">,</span> <span class="token number">4.12</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="c-isbuildable" tabindex="-1"><a class="header-anchor" href="#c-isbuildable" aria-hidden="true">#</a> c. IsBuildable</h3><p><strong>This function is available in version 1.3 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>IsBuildable()</code> method allows you to know if the specified dimensions can build a triangle. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">IsBuildable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has three arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side1</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">4.5</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">side2</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">9.1</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">side3</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">12.45</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">bool</span></span> isBuildable <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">IsBuildable</span><span class="token punctuation">(</span><span class="token number">4.5</span><span class="token punctuation">,</span> <span class="token number">9.1</span><span class="token punctuation">,</span> <span class="token number">12.45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> isBuildable <span class="token keyword">As</span> Bool <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span>IsBuildable<span class="token punctuation">(</span><span class="token number">4.5</span><span class="token punctuation">,</span> <span class="token number">9.1</span><span class="token punctuation">,</span> <span class="token number">12.45</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="d-gethypotenuse" tabindex="-1"><a class="header-anchor" href="#d-gethypotenuse" aria-hidden="true">#</a> d. GetHypotenuse</h3><p><strong>This function is available in version 3.2 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetHypotenuse()</code> method allows you to get a triangle&#39;s hypotenuse from the two other sides. (Pythagoras) It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">GetHypotenuse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side1</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">4.5</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">side2</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">6.1</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> hypotenuse <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">GetHypotenuse</span><span class="token punctuation">(</span><span class="token number">4.5</span><span class="token punctuation">,</span> <span class="token number">6.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Get the hypotenuse</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> hypotenuse <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span>GetHypotenuse<span class="token punctuation">(</span><span class="token number">4.5</span><span class="token punctuation">,</span> <span class="token number">6.1</span><span class="token punctuation">)</span> <span class="token comment">&#39; Get the hypotenuse</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="e-isright" tabindex="-1"><a class="header-anchor" href="#e-isright" aria-hidden="true">#</a> e. IsRight</h3><p><strong>This function is available in version 3.10 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>IsRight()</code> method allows you to get if a triangle is right or not. It returns a <code>bool</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">IsRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side1</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">4.5</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">side2</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">6.1</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">side3</td><td style="text-align:center;">Triangle&#39;s side</td><td style="text-align:center;">8</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">bool</span></span> isRight <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span><span class="token function">IsRight</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// isRight = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> isRight <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Triangle<span class="token punctuation">.</span>IsRight<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">&#39; isRight = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="cube" tabindex="-1"><a class="header-anchor" href="#cube" aria-hidden="true">#</a> Cube</h2><h3 id="a-getvolume" tabindex="-1"><a class="header-anchor" href="#a-getvolume" aria-hidden="true">#</a> a. GetVolume</h3><p><strong>This function is available in version 1.8 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetVolume()</code> method allows you to get the volume of a cube.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Cube<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two variation:</p><p><strong>Variation 1</strong></p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">double</span></span> side<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">double</span></span> height<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Here&#39;s the arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side</td><td style="text-align:center;">Cube&#39;s side</td><td style="text-align:center;">7.1</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">height</td><td style="text-align:center;">Cube&#39;s height</td><td style="text-align:center;">3.8</td></tr></tbody></table><p><strong>Variation 2</strong></p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">double</span></span> side<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Here&#39;s the arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side</td><td style="text-align:center;">Cube&#39;s side</td><td style="text-align:center;">8</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// In the case of a rectangular prism</span>
<span class="token class-name"><span class="token keyword">double</span></span> volume <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cube<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// In the case of a cube</span>
<span class="token class-name"><span class="token keyword">double</span></span> volumeCube <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cube<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token comment">&#39; In the case of a rectangular prism</span>
<span class="token keyword">Dim</span> volume <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cube<span class="token punctuation">.</span>GetVolume<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span>

<span class="token comment">&#39; In the case of a cube</span>
<span class="token keyword">Dim</span> volumeCube <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cube<span class="token punctuation">.</span>GetVolume<span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getedge" tabindex="-1"><a class="header-anchor" href="#b-getedge" aria-hidden="true">#</a> b. GetEdge</h3><p><strong>This function is available in version 1.8.1 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetEdge()</code> method enables you to get the edge of a cube. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Cube<span class="token punctuation">.</span><span class="token function">GetEdge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">area</td><td style="text-align:center;">Area of the cube</td><td style="text-align:center;">41.5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> areaBase <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cube<span class="token punctuation">.</span><span class="token function">GetEdge</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> areaBase <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cube<span class="token punctuation">.</span>GetEdge<span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="cylinder" tabindex="-1"><a class="header-anchor" href="#cylinder" aria-hidden="true">#</a> Cylinder</h2><h3 id="a-getvolume-1" tabindex="-1"><a class="header-anchor" href="#a-getvolume-1" aria-hidden="true">#</a> a. GetVolume</h3><p><strong>This function is available in version 1.8 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetVolume()</code> method enables you to get the volume of a cylinder. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radius</td><td style="text-align:center;">Cylinder&#39;s radius</td><td style="text-align:center;">4.5</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">height</td><td style="text-align:center;">Cylinder&#39;s height</td><td style="text-align:center;">7</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Get the volume of a cylinder</span>
<span class="token class-name"><span class="token keyword">double</span></span> volume <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token comment">&#39; Get the volume of a cylinder</span>
<span class="token keyword">Dim</span> volume <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span>GetVolume<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getheight" tabindex="-1"><a class="header-anchor" href="#b-getheight" aria-hidden="true">#</a> b. GetHeight</h3><p><strong>This function is available in version 1.8.1 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetHeight()</code> method enables you to get the height of a cylinder. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radius</td><td style="text-align:center;">Cylinder&#39;s radius</td><td style="text-align:center;">4.5</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">area</td><td style="text-align:center;">Cylinder&#39;s area</td><td style="text-align:center;">21</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> height <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> height <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span>GetHeight<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="c-getbasearea" tabindex="-1"><a class="header-anchor" href="#c-getbasearea" aria-hidden="true">#</a> c. GetBaseArea</h3><p><strong>This function is available in version 1.8.1 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetBaseArea()</code> method allows you to get the area of the base of a cylinder. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span><span class="token function">GetBaseArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radius</td><td style="text-align:center;">Cylinder&#39;s radius</td><td style="text-align:center;">12</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> baseArea <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span><span class="token function">GetBaseArea</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> baseArea <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cylinder<span class="token punctuation">.</span>GetBaseArea<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="pyramid" tabindex="-1"><a class="header-anchor" href="#pyramid" aria-hidden="true">#</a> Pyramid</h2><h3 id="a-getvolume-2" tabindex="-1"><a class="header-anchor" href="#a-getvolume-2" aria-hidden="true">#</a> a. GetVolume</h3><p><strong>This function is available in version 1.8 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetVolume()</code> method allows you to get the volume of a pyramid. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has three arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">length</td><td style="text-align:center;">Length of the pyramid</td><td style="text-align:center;">4.5</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">width</td><td style="text-align:center;">Width of the pyramid</td><td style="text-align:center;">7</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">height</td><td style="text-align:center;">Height of the pyramid</td><td style="text-align:center;">8.9</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Get the volume of a pyramid</span>
<span class="token class-name"><span class="token keyword">double</span></span> volume <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token comment">&#39; Get the volume of a pyramid</span>
<span class="token keyword">Dim</span> volume <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span>GetVolume<span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getheight-1" tabindex="-1"><a class="header-anchor" href="#b-getheight-1" aria-hidden="true">#</a> b. GetHeight</h3><p><strong>This function is available in version 1.8.1 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetHeight()</code> method allows you to get the height of a pyramid. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has three arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">length</td><td style="text-align:center;">Length of the pyramid</td><td style="text-align:center;">4.5</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">width</td><td style="text-align:center;">Width of the pyramid</td><td style="text-align:center;">7</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">volume</td><td style="text-align:center;">Volume of the pyramid</td><td style="text-align:center;">8.9</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> height <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span><span class="token function">GetHeight</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> height <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span>GetHeight<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="c-getlengthbase" tabindex="-1"><a class="header-anchor" href="#c-getlengthbase" aria-hidden="true">#</a> c. GetLengthBase</h3><p><strong>This function is available in version 1.8.1 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetLengthBase()</code> allows you to get the length of the base of a pyramid. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span><span class="token function">GetLengthBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">areaBase</td><td style="text-align:center;">Base&#39;s area</td><td style="text-align:center;">9.9</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">width</td><td style="text-align:center;">Width</td><td style="text-align:center;">12</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> lengthBase <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span><span class="token function">GetLengthBase</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> lengthBase <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span>GetLengthBase<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="d-getwidthbase" tabindex="-1"><a class="header-anchor" href="#d-getwidthbase" aria-hidden="true">#</a> d. GetWidthBase</h3><p><strong>This function is available in version 1.8.1 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetWidthBase()</code> allows you to get the width of the base of a pyramid. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span><span class="token function">GetWidthBase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">areaBase</td><td style="text-align:center;">Base&#39;s area</td><td style="text-align:center;">6.1</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">length</td><td style="text-align:center;">Length</td><td style="text-align:center;">15</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> widthBase <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span><span class="token function">GetWidthBase</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> widthBase <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Pyramid<span class="token punctuation">.</span>GetWidthBase<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="hexagon" tabindex="-1"><a class="header-anchor" href="#hexagon" aria-hidden="true">#</a> Hexagon</h2><h3 id="a-getarea-2" tabindex="-1"><a class="header-anchor" href="#a-getarea-2" aria-hidden="true">#</a> a. GetArea</h3><p><strong>This function is available in version 3.2 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetArea()</code> method allows you to get the area of an hexagon from the length of it&#39;s side. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Hexagon<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side</td><td style="text-align:center;">Length of the hexagon&#39;s side</td><td style="text-align:center;">8</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> hexagonArea <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Hexagon<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Get the area</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> hexagonArea <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Hexagon<span class="token punctuation">.</span>GetArea<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment">&#39; Get the area</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getperimeter-2" tabindex="-1"><a class="header-anchor" href="#b-getperimeter-2" aria-hidden="true">#</a> b. GetPerimeter</h3><p><strong>This function is available in version 3.2 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetPerimeter()</code> method allows you to get the perimeter of a hexagon. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Hexagon<span class="token punctuation">.</span><span class="token function">GetPerimeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side</td><td style="text-align:center;">Length of the hexagon&#39;s side</td><td style="text-align:center;">7.2</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> hexagonPerimeter <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Hexagon<span class="token punctuation">.</span><span class="token function">GetPerimeter</span><span class="token punctuation">(</span><span class="token number">7.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Get perimeter</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> hexagonPerimeter <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Hexagon<span class="token punctuation">.</span>GetPerimeter<span class="token punctuation">(</span><span class="token number">7.2</span><span class="token punctuation">)</span> <span class="token comment">&#39; Get perimeter</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="diamond" tabindex="-1"><a class="header-anchor" href="#diamond" aria-hidden="true">#</a> Diamond</h2><h3 id="a-getarea-3" tabindex="-1"><a class="header-anchor" href="#a-getarea-3" aria-hidden="true">#</a> a. GetArea</h3><p><strong>This function is available in version 3.2 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetArea()</code> method allows you to get the area of a diamond. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Diamond<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">diag1</td><td style="text-align:center;">Length of the diamond&#39;s diagonal</td><td style="text-align:center;">4.5</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">diag2</td><td style="text-align:center;">Length of the diamond&#39;s diagonal</td><td style="text-align:center;">7.5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> diamondArea <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Diamond<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token number">4.5</span><span class="token punctuation">,</span> <span class="token number">7.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Get area</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> diamondArea <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Diamond<span class="token punctuation">.</span>GetArea<span class="token punctuation">(</span><span class="token number">4.5</span><span class="token punctuation">,</span> <span class="token number">7.5</span><span class="token punctuation">)</span> <span class="token comment">&#39; Get area</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getperimeter-3" tabindex="-1"><a class="header-anchor" href="#b-getperimeter-3" aria-hidden="true">#</a> b. GetPerimeter</h3><p><strong>This function is available in version 3.2 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetPerimeter()</code> method allows you to get the area of a diamond. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Diamond<span class="token punctuation">.</span><span class="token function">GetPerimeter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">side</td><td style="text-align:center;">Length of the diamond&#39;s side</td><td style="text-align:center;">8</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> diamondPerimeter <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Diamond<span class="token punctuation">.</span><span class="token function">GetPerimeter</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Get perimeter</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> diamondPerimeter <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Diamond<span class="token punctuation">.</span>GetPerimeter<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment">&#39; Get perimeter</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="sphere" tabindex="-1"><a class="header-anchor" href="#sphere" aria-hidden="true">#</a> Sphere</h2><h3 id="a-getarea-4" tabindex="-1"><a class="header-anchor" href="#a-getarea-4" aria-hidden="true">#</a> a. GetArea</h3><p><strong>This function is available in version 3.8 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetArea()</code> method allows you to get the area of a sphere from its radius. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Sphere<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radius</td><td style="text-align:center;">Radius of the sphere</td><td style="text-align:center;">10</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> area <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Sphere<span class="token punctuation">.</span><span class="token function">GetArea</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected output:</span>
<span class="token comment">// 1256.6370614359173</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> area <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Sphere<span class="token punctuation">.</span>GetArea<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected output:</span>
<span class="token comment">&#39; 1256.6370614359173</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getvolume" tabindex="-1"><a class="header-anchor" href="#b-getvolume" aria-hidden="true">#</a> b. GetVolume</h3><p><strong>This function is available in version 3.8 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetVolume()</code> method allows you to get the volume of a sphere from its radius. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Sphere<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radius</td><td style="text-align:center;">Radius of the sphere</td><td style="text-align:center;">10</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> volume <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Sphere<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected output:</span>
<span class="token comment">// 4188.790204786391</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> volume <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Sphere<span class="token punctuation">.</span>GetVolume<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected output:</span>
<span class="token comment">&#39; 4188.790204786391</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="cone" tabindex="-1"><a class="header-anchor" href="#cone" aria-hidden="true">#</a> Cone</h2><h3 id="a-getvolume-3" tabindex="-1"><a class="header-anchor" href="#a-getvolume-3" aria-hidden="true">#</a> a. GetVolume</h3><p><strong>This function is available in version 3.10 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetVolume()</code> method allows you to get the volume of a cone. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Cone<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">radius</td><td style="text-align:center;">The radius of the cone</td><td style="text-align:center;">10.4</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">height</td><td style="text-align:center;">The height of the cone</td><td style="text-align:center;">9.5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> volume <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cone<span class="token punctuation">.</span><span class="token function">GetVolume</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// volume = 523.5987755982989</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> volume <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Cone<span class="token punctuation">.</span>GetVolume<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
<span class="token comment">&#39; volume = 523.5987755982989</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="trigonometry-functions" tabindex="-1"><a class="header-anchor" href="#trigonometry-functions" aria-hidden="true">#</a> Trigonometry functions</h2><p><img src="https://raw.githubusercontent.com/Leo-Corporation/LeoCorp-Docs/master/Documentation/Images/LeoCorpLibrary/sohcahtoa.png" alt="SohCahToa"></p><h3 id="a-gettriangleopposedsidefromhypotenuse" tabindex="-1"><a class="header-anchor" href="#a-gettriangleopposedsidefromhypotenuse" aria-hidden="true">#</a> a. GetTriangleOpposedSideFromHypotenuse</h3><p><strong>This function is available in version 3.5 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetTriangleOpposedSideFromHypotenuse()</code> allows you to get a triangle&#39;s opposed side from an angle, and its hypotenuse. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleOpposedSideFromHypotenuse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">angle</td><td style="text-align:center;">The angle value (in radians)</td><td style="text-align:center;">1.2</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">hypotenuse</td><td style="text-align:center;">The hypotenuse length value</td><td style="text-align:center;">12</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p><img src="https://raw.githubusercontent.com/Leo-Corporation/LeoCorp-Docs/master/Documentation/Images/LeoCorpLibrary/drawtriangle.png" alt="Image"></p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> opposedSide <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleOpposedSideFromHypotenuse</span><span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 8.66</span>
<span class="token comment">// Actual result: 8.67423225594017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> opposedSide <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span>GetTriangleOpposedSideFromHypotenuse<span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 8.66</span>
<span class="token comment">&#39; Actual result: 8.67423225594017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-gettriangleopposedsidefromadjacent" tabindex="-1"><a class="header-anchor" href="#b-gettriangleopposedsidefromadjacent" aria-hidden="true">#</a> b. GetTriangleOpposedSideFromAdjacent</h3><p><strong>This function is available in version 3.5 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetTriangleOpposedSideFromAdjacent()</code> method allows you to get a triangle&#39;s opposed side from an angle, and its adjacent side. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleOpposedSideFromAdjacent</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">angle</td><td style="text-align:center;">The angle value (in radians)</td><td style="text-align:center;">1.02</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">adjacent</td><td style="text-align:center;">The adjacent side length value</td><td style="text-align:center;">5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p><img src="https://raw.githubusercontent.com/Leo-Corporation/LeoCorp-Docs/master/Documentation/Images/LeoCorpLibrary/drawtriangle.png" alt="Image"></p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> opposedSide <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleOpposedSideFromAdjacent</span><span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 8.66</span>
<span class="token comment">// Actual result: 8.716576549915851</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> opposedSide <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span>GetTriangleOpposedSideFromAdjacent<span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 8.66</span>
<span class="token comment">&#39; Actual result: 8.716576549915851</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="c-gettriangleadjacentsidefromhypotenuse" tabindex="-1"><a class="header-anchor" href="#c-gettriangleadjacentsidefromhypotenuse" aria-hidden="true">#</a> c. GetTriangleAdjacentSideFromHypotenuse</h3><p><strong>This function is available in version 3.5 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetTriangleAdjacentSideFromHypotenuse()</code> method allows you to get a triangle&#39;s adjacent side from an angle, and its hypotenuse. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleAdjacentSideFromHypotenuse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">angle</td><td style="text-align:center;">The angle value (in radians)</td><td style="text-align:center;">1.02</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">hypotenuse</td><td style="text-align:center;">The hypotenuse side length value</td><td style="text-align:center;">5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p><img src="https://raw.githubusercontent.com/Leo-Corporation/LeoCorp-Docs/master/Documentation/Images/LeoCorpLibrary/drawtriangle.png" alt="Image"></p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> adjacentSide <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleAdjacentSideFromHypotenuse</span><span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 5</span>
<span class="token comment">// Actual result: 4.97571047891727</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> opposedSide <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span>GetTriangleAdjacentSideFromHypotenuse<span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 5</span>
<span class="token comment">&#39; Actual result: 4.97571047891727</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="d-gettriangleadjacentsidefromopposedside" tabindex="-1"><a class="header-anchor" href="#d-gettriangleadjacentsidefromopposedside" aria-hidden="true">#</a> d. GetTriangleAdjacentSideFromOpposedSide</h3><p><strong>This function is available in version 3.5 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetTriangleAdjacentSideFromOpposedSide()</code> method allows you to get a triangle&#39;s adjacent side from an angle, and its opposed side. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleAdjacentSideFromOpposedSide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">angle</td><td style="text-align:center;">The angle value (in radians)</td><td style="text-align:center;">1.2</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">opposed</td><td style="text-align:center;">The opposed side length value</td><td style="text-align:center;">8.6</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p><img src="https://raw.githubusercontent.com/Leo-Corporation/LeoCorp-Docs/master/Documentation/Images/LeoCorpLibrary/drawtriangle.png" alt="Image"></p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> adjacentSide <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleAdjacentSideFromOpposedSide</span><span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">8.66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 5</span>
<span class="token comment">// Actual result: 4.967546576576329</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> adjacentSide <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span>GetTriangleAdjacentSideFromOpposedSide<span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">8.66</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 5</span>
<span class="token comment">&#39; Actual result: 4.967546576576329</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="e-gettrianglehypotenusefromopposedside" tabindex="-1"><a class="header-anchor" href="#e-gettrianglehypotenusefromopposedside" aria-hidden="true">#</a> e. GetTriangleHypotenuseFromOpposedSide</h3><p><strong>This function is available in version 3.5 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetTriangleHypotenuseFromOpposedSide()</code> method allows you to get a triangle&#39;s hypotenuse from an angle, and its opposed side. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleHypotenuseFromOpposedSide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">angle</td><td style="text-align:center;">The angle value (in radians)</td><td style="text-align:center;">1.2</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">opposed</td><td style="text-align:center;">The opposed side length value</td><td style="text-align:center;">8.6</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p><img src="https://raw.githubusercontent.com/Leo-Corporation/LeoCorp-Docs/master/Documentation/Images/LeoCorpLibrary/drawtriangle.png" alt="Image"></p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> hypotenuse <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleHypotenuseFromOpposedSide</span><span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">8.66</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 10</span>
<span class="token comment">// Actual result: 9.98359248920223</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> hypotenuse <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span>GetTriangleHypotenuseFromOpposedSide<span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">8.66</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 10</span>
<span class="token comment">&#39; Actual result: 9.98359248920223</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="f-gettrianglehypotenusefromadjacentside" tabindex="-1"><a class="header-anchor" href="#f-gettrianglehypotenusefromadjacentside" aria-hidden="true">#</a> f. GetTriangleHypotenuseFromAdjacentSide</h3><p><strong>This function is available in version 3.5 and higher</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetTriangleHypotenuseFromAdjacentSide()</code> method allows you to get a triangle&#39;s hypotenuse from an angle, and its adjacent side. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleHypotenuseFromAdjacentSide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">angle</td><td style="text-align:center;">The angle value (in radians)</td><td style="text-align:center;">1.2</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">adjacent</td><td style="text-align:center;">The adjacent side length value</td><td style="text-align:center;">8.6</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p><img src="https://raw.githubusercontent.com/Leo-Corporation/LeoCorp-Docs/master/Documentation/Images/LeoCorpLibrary/drawtriangle.png" alt="Image"></p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> hypotenuse <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span><span class="token function">GetTriangleHypotenuseFromAdjacentSide</span><span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 10</span>
<span class="token comment">// Actual result: 10.04881618652381</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> hypotenuse <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Trigonometry<span class="token punctuation">.</span>GetTriangleHypotenuseFromAdjacentSide<span class="token punctuation">(</span><span class="token number">1.05</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 10</span>
<span class="token comment">&#39; Actual result: 10.04881618652381</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h2 id="percentage" tabindex="-1"><a class="header-anchor" href="#percentage" aria-hidden="true">#</a> Percentage</h2><h3 id="a-getresultpercentageincrease" tabindex="-1"><a class="header-anchor" href="#a-getresultpercentageincrease" aria-hidden="true">#</a> a. GetResultPercentageIncrease</h3><p><strong>This function is available in version 4.7 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetResultPercentageIncrease()</code> method allows you to get the result after a percentage increase. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span><span class="token function">GetResultPercentageIncrease</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">value</td><td style="text-align:center;">The base value</td><td style="text-align:center;">100</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">increaseRate</td><td style="text-align:center;">The evolution rate, in the following format: <code>x/100d</code></td><td style="text-align:center;">50/100d or 0.5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> result <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span><span class="token function">GetResultPercentageIncrease</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token operator">/</span><span class="token number">100d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 150</span>
<span class="token comment">// Actual result: 150.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> result <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span>GetResultPercentageIncrease<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token operator">/</span><span class="token number">100d</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 150</span>
<span class="token comment">&#39; Actual result: 150.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="b-getresultpercentagedecrease" tabindex="-1"><a class="header-anchor" href="#b-getresultpercentagedecrease" aria-hidden="true">#</a> b. GetResultPercentageDecrease</h3><p><strong>This function is available in version 4.7 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetResultPercentageDecrease()</code> method allows you to get the result after a percentage decrease. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span><span class="token function">GetResultPercentageDecrease</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two arguments:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">value</td><td style="text-align:center;">The base value</td><td style="text-align:center;">100</td></tr><tr><td style="text-align:center;">double</td><td style="text-align:center;">decreaseRate</td><td style="text-align:center;">The evolution rate, in the following format: <code>x/100d</code></td><td style="text-align:center;">50/100d or 0.5</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> result <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span><span class="token function">GetResultPercentageDecrease</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token operator">/</span><span class="token number">100d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: 50</span>
<span class="token comment">// Actual result: 50.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> result <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span>GetResultPercentageDecrease<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token operator">/</span><span class="token number">100d</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: 50</span>
<span class="token comment">&#39; Actual result: 50.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="c-getinvertedevolutionrate" tabindex="-1"><a class="header-anchor" href="#c-getinvertedevolutionrate" aria-hidden="true">#</a> c. GetInvertedEvolutionRate</h3><p><strong>This function is available in version 4.7 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetInvertedEvolutionRate()</code> method allows you to get the inverted evolution rate that cancels itself. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span><span class="token function">GetInvertedEvolutionRate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">evolutionRate</td><td style="text-align:center;">The evolution rate, in the following format: <code>x/100d</code></td><td style="text-align:center;">20/100d or 0.2</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> result <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span><span class="token function">GetInvertedEvolutionRate</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token operator">/</span><span class="token number">100d</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: -0.16666666666666663</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> result <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span>GetInvertedEvolutionRate<span class="token punctuation">(</span><span class="token number">20</span><span class="token operator">/</span><span class="token number">100d</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: -0.16666666666666663</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p><h3 id="d-proportiontopercentagestring" tabindex="-1"><a class="header-anchor" href="#d-proportiontopercentagestring" aria-hidden="true">#</a> d. ProportionToPercentageString</h3><p><strong>This function is available in version 4.7 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ProportionToPercentageString()</code> method allows you to get the percentage string from a proportion. Returns a <code>string</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span><span class="token function">ProportionToPercentageString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th><th style="text-align:center;">Example</th></tr></thead><tbody><tr><td style="text-align:center;">double</td><td style="text-align:center;">proportion</td><td style="text-align:center;">The proportion to get the string of</td><td style="text-align:center;">0.2</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> result <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span><span class="token function">ProportionToPercentageString</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Expected result: &quot;20%&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> result <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> Maths<span class="token punctuation">.</span>Percentage<span class="token punctuation">.</span>ProportionToPercentageString<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Expected result: &quot;20%&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#maths">Go to top</a></p>`,707),r=[l];function o(p,i){return e(),n("div",null,r)}const d=t(s,[["render",o],["__file","Mathematics-functions.html.vue"]]);export{d as default};
