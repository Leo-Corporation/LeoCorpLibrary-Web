import{_ as p,r as l,o as i,c,b as n,d as t,e as a,w as o,a as s}from"./app.397e6efa.js";const r={},d=s(`<h1 id="extensions" tabindex="-1"><a class="header-anchor" href="#extensions" aria-hidden="true">#</a> Extensions</h1><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p>Since the version 2.5.0.2020 of LeoCorpLibrary, a new namespace has been added: <code>LeoCorpLibrary.Extensions</code>. In this namespace, there is extensions for common types such as <code>string</code>, <code>int</code>, <code>arrays</code>...</p><p>If you wanna use those extensions, import the namespace:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">LeoCorpLibrary<span class="token punctuation">.</span>Extensions</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code>Import LeoCorpLibrary<span class="token punctuation">.</span>Extensions
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="string-extensions" tabindex="-1"><a class="header-anchor" href="#string-extensions" aria-hidden="true">#</a> String Extensions</h2><h3 id="a-countwords" tabindex="-1"><a class="header-anchor" href="#a-countwords" aria-hidden="true">#</a> a. CountWords</h3><p><strong>This function is available in version 2.5 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>CountWords()</code> method allows you to get the number of words in a <code>string</code>. Returns an <code>int</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>StringExtensions<span class="token punctuation">.</span><span class="token function">CountWords</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two variation:</p><p><strong>Variation 1</strong></p><p>This first variation doesn&#39;t take any argument.</p><p><strong>Variation 2</strong> This method has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string[]</td><td style="text-align:center;">wordSeparator</td><td style="text-align:center;">The separator of the words. Example: <code>&quot;, ; : ! ? . &quot;</code></td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Variation 1</span>
<span class="token class-name"><span class="token keyword">int</span></span> numberOfWords <span class="token operator">=</span> <span class="token string">&quot;Hello, this is a test sentence!&quot;</span><span class="token punctuation">.</span><span class="token function">CountWords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Variation 2</span>
<span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> wordSeparator <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span></span> numberOfWords <span class="token operator">=</span> <span class="token string">&quot;Hello, this is a test sentence!&quot;</span><span class="token punctuation">.</span><span class="token function">CountWords</span><span class="token punctuation">(</span>wordSeparator<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token comment">&#39; Variation 1</span>
<span class="token keyword">Dim</span> numberOfWords <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token string">&quot;Hello, this is a test sentence!&quot;</span><span class="token punctuation">.</span>CountWords<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">&#39; Variation 2</span>
<span class="token keyword">Dim</span> wordSeparator <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;?&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">}</span>
<span class="token keyword">Dim</span> numberOfWords <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token string">&quot;Hello, this is a test sentence!&quot;</span><span class="token punctuation">.</span>CountWords<span class="token punctuation">(</span>wordSeparator<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="b-encrypt" tabindex="-1"><a class="header-anchor" href="#b-encrypt" aria-hidden="true">#</a> b. Encrypt</h3><p><strong>This function is available in version 2.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>Encrypt()</code> method allows you to encrypt a <code>string</code>. It returns a <code>string</code> value.</p><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">source</td><td style="text-align:center;">The string to encrypt</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">key</td><td style="text-align:center;">The key that will be used to encrypt and decrypt the string</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token string">&quot;Hello!&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> encrypted <span class="token operator">=</span> LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">Encrypt</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">&quot;ABC123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Output: jqPW4uxt8hk=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> s <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;Hello!&quot;</span>
<span class="token keyword">Dim</span> encrypted <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span>Encrypt<span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">&quot;ABC123&quot;</span><span class="token punctuation">)</span>

<span class="token comment">&#39; Output: jqPW4uxt8hk=</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="c-decrypt" tabindex="-1"><a class="header-anchor" href="#c-decrypt" aria-hidden="true">#</a> c. Decrypt</h3><p><strong>This function is available in version 2.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>Decrypt()</code> method allows you to decrypt an encrypted string. It returns a <code>string</code> value.</p><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">encrypt</td><td style="text-align:center;">The encrypted string</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">key</td><td style="text-align:center;">The key that will be used to encrypt and decrypt the string</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> encrypted <span class="token operator">=</span> <span class="token string">&quot;jqPW4uxt8hk=&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> decrypted <span class="token operator">=</span> LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span><span class="token function">Decrypt</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">,</span> <span class="token string">&quot;ABC123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Output: Hello!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> encrypted <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;jqPW4uxt8hk=&quot;</span>
<span class="token keyword">Dim</span> decrypted <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> LeoCorpLibrary<span class="token punctuation">.</span>Crypt<span class="token punctuation">.</span>Decrypt<span class="token punctuation">(</span>encrypted<span class="token punctuation">,</span> <span class="token string">&quot;ABC123&quot;</span><span class="token punctuation">)</span>

<span class="token comment">&#39; Output: Hello!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="d-upperfirstletter" tabindex="-1"><a class="header-anchor" href="#d-upperfirstletter" aria-hidden="true">#</a> d. UpperFirstLetter</h3><p><strong>This function is available in version 3.2 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>UpperFirstLetter()</code> method allows you to upper the first letter of a <code>string</code>. It returns a <code>string</code> value.</p><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> helloMsg <span class="token operator">=</span> <span class="token string">&quot;hello, this is a test&quot;</span><span class="token punctuation">;</span> <span class="token comment">// String</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>helloMsg<span class="token punctuation">.</span><span class="token function">UpperFirstLetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Output:</span>
<span class="token comment">// Hello, this is a test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> helloMsg <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;hello, this is a test&quot;</span> <span class="token comment">&#39; String</span>
Console<span class="token punctuation">.</span>WriteLine<span class="token punctuation">(</span>helloMsg<span class="token punctuation">.</span>UpperFirstLetter<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">&#39; Output:</span>
<span class="token comment">&#39; Hello, this is a test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="e-upperlettersat" tabindex="-1"><a class="header-anchor" href="#e-upperlettersat" aria-hidden="true">#</a> e. UpperLettersAt</h3><p><strong>This function is available in version 3.4 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>This method allows you to upper letters from a starting index, and an end index. It returns a <code>string</code> value.</p><p>This method has a few arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">int</td><td style="text-align:center;">startIndex</td><td style="text-align:center;">The position where letters should start be in upper case</td></tr><tr><td style="text-align:center;">int</td><td style="text-align:center;">length</td><td style="text-align:center;">The position where letters should stop be in upper case</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> <span class="token string">&quot;I want leocorplibrary in upper case&quot;</span><span class="token punctuation">.</span><span class="token function">UpperLettersAt</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Value of s:</span>
<span class="token comment">// &quot;I want LEOCORPLIBRARY in upper case&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> s <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;I want leocorplibrary in upper case&quot;</span><span class="token punctuation">.</span>UpperLettersAt<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
<span class="token comment">&#39; Value of s:</span>
<span class="token comment">&#39; &quot;I want LEOCORPLIBRARY in upper case&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="f-isendingwithsamepunctuation" tabindex="-1"><a class="header-anchor" href="#f-isendingwithsamepunctuation" aria-hidden="true">#</a> f. IsEndingWithSamePunctuation</h3><p><strong>This function is available in version 3.4 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>This method allows you to compare if two <code>string</code> values are ending with the same punctuation. It returns a <code>bool</code> value.</p><p><strong>Variation 1</strong></p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token function">IsEndingWithSamePunctuation</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> stringToCheck<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This first variation has one argument:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">stringToCheck</td><td style="text-align:center;">The string to compare</td></tr></tbody></table><p><strong>Variation 2</strong></p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token function">IsEndingWithSamePunctuation</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> stringToCheck<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> punctuationToCheck<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token range operator">..</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This second variation has two arguments:</p><table><thead><tr><th style="text-align:center;">Type</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">stringToCheck</td><td style="text-align:center;">The string to compare</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">punctuationToCheck</td><td style="text-align:center;">The punctuation sign to check for</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Variation 1</span>

<span class="token class-name"><span class="token keyword">string</span></span> a <span class="token operator">=</span> <span class="token string">&quot;This is a test sentence.&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> b <span class="token operator">=</span> <span class="token string">&quot;This is an another test sentence.&quot;</span><span class="token punctuation">;</span>

a<span class="token punctuation">.</span><span class="token function">IsEndingWithSamePunctuation</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns true</span>

<span class="token comment">// Variation 2</span>

a<span class="token punctuation">.</span><span class="token function">IsEndingWithSamePunctuation</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token comment">&#39; Variation 1</span>

<span class="token keyword">Dim</span> a <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;This is a test sentence.&quot;</span>
<span class="token keyword">Dim</span> b <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;This is an another test sentence.&quot;</span>

a<span class="token punctuation">.</span>IsEndingWithSamePunctuation<span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">&#39; Returns true</span>

<span class="token comment">&#39; Variation 2</span>

a<span class="token punctuation">.</span>IsEndingWithSamePunctuation<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span> <span class="token comment">&#39; Returns true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="g-splitlines" tabindex="-1"><a class="header-anchor" href="#g-splitlines" aria-hidden="true">#</a> g. SplitLines</h3><p><strong>This function is available in version 3.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>SplitLines()</code> method allows you to split a string with multiple lines, and put each line of this string into an array of <code>string</code>. It returns a <code>string[]</code> value.</p><p>This method has no argument.</p><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> text <span class="token operator">=</span> <span class="token string">&quot;Hello,\\nWorld!&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> lines <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">SplitLines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// lines[0] = Hello,</span>
<span class="token comment">// lines[1] = World!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> text <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> <span class="token string">&quot;Hello,&quot;</span> <span class="token operator">&amp;</span> vbLf <span class="token operator">&amp;</span> <span class="token string">&quot;World!&quot;</span>
<span class="token keyword">Dim</span> lines <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> text<span class="token punctuation">.</span>SplitLines<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">&#39; lines[0] = Hello,</span>
<span class="token comment">&#39; lines[1] = World!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="h-hasrepeatedcharacters" tabindex="-1"><a class="header-anchor" href="#h-hasrepeatedcharacters" aria-hidden="true">#</a> h. HasRepeatedCharacters</h3><p><strong>This function is available in version 3.8 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>HasRepeatedCharacters()</code> method allows you to know if a <code>string</code> has repeated characters. It returns a <code>bool</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>StringExtensions<span class="token punctuation">.</span><span class="token function">HasRepeatedCharacters</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method doesn&#39;t take any argument.</p><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">bool</span></span> r <span class="token operator">=</span> <span class="token string">&quot;aabb&quot;</span><span class="token punctuation">.</span><span class="token function">HasRepeatedCharacters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// r = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> r <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> <span class="token string">&quot;aabb&quot;</span><span class="token punctuation">.</span>HasRepeatedCharacters<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">&#39; r = true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h2 id="int-extensions" tabindex="-1"><a class="header-anchor" href="#int-extensions" aria-hidden="true">#</a> Int Extensions</h2><h3 id="a-iseven" tabindex="-1"><a class="header-anchor" href="#a-iseven" aria-hidden="true">#</a> a. IsEven</h3><p><strong>This function is available in version 2.5 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>IsEven()</code> method allows you to know if a specific <code>int</code> is even. Returns a <code>bool</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">IsEven</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method doesn&#39;t take any argument.</p><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">bool</span></span> even <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">.</span><span class="token function">IsEven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns true</span>
<span class="token class-name"><span class="token keyword">bool</span></span> odd <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">.</span><span class="token function">IsEven</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> even <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">.</span>IsEven<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">&#39; Returns true</span>
<span class="token keyword">Dim</span> odd <span class="token keyword">As</span> <span class="token keyword">Boolean</span> <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">.</span>IsEven<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">&#39; Returns false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="b-todouble" tabindex="-1"><a class="header-anchor" href="#b-todouble" aria-hidden="true">#</a> b. ToDouble</h3><p><strong>This function is available in version 2.5 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ToDouble()</code> method allows you to convert an <code>\xECnt</code> value to a <code>double</code> value. Returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">IsEven</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method doesn&#39;t take any argument.</p><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> a <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span></span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> result <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">ToDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> b<span class="token punctuation">.</span><span class="token function">ToDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> a <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">15</span>
<span class="token keyword">Dim</span> b <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">Dim</span> result <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> a<span class="token punctuation">.</span>ToDouble<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> b<span class="token punctuation">.</span>ToDouble<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="c-convertsizeunittobyte" tabindex="-1"><a class="header-anchor" href="#c-convertsizeunittobyte" aria-hidden="true">#</a> c. ConvertSizeUnitToByte</h3><p><strong>This function is available in version 3.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ConvertSizeUnitToByte()</code> method allows you to convert a size unit such as kilobyte, gigabyte to byte. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">UnitType</td><td style="text-align:center;">unitType</td><td style="text-align:center;">The source unit (kb, mb...)</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> kiloByte <span class="token operator">=</span> <span class="token number">5000</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> byteVar <span class="token operator">=</span> kiloByte<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToByte</span><span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Kilobyte<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Expected value for byteVar: 5000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> kiloByte <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">5000</span>
<span class="token keyword">Dim</span> byteVar <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> kiloByte<span class="token punctuation">.</span>ConvertSizeUnitToByte<span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Kilobyte<span class="token punctuation">)</span>

<span class="token comment">&#39; Expected value for byteVar: 5000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="d-convertsizeunittokilobyte" tabindex="-1"><a class="header-anchor" href="#d-convertsizeunittokilobyte" aria-hidden="true">#</a> d. ConvertSizeUnitToKilobyte</h3><p><strong>This function is available in version 3.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ConvertSizeUnitToKilobyte()</code> method allows you to convert a size unit such as kilobyte, gigabyte to kilobyte. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToKilobyte</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">UnitType</td><td style="text-align:center;">unitType</td><td style="text-align:center;">The source unit (kb, mb...)</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> megaByte <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> kiloByte <span class="token operator">=</span> megaByte<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToKilobyte</span><span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Megabyte<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Expected value for kiloByte: 50000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> megaByte <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">50</span>
<span class="token keyword">Dim</span> kiloByte <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> megaByte<span class="token punctuation">.</span>ConvertSizeUnitToKilobyte<span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Megabyte<span class="token punctuation">)</span>

<span class="token comment">&#39; Expected value for kiloByte: 50000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="e-convertsizeunittomegabyte" tabindex="-1"><a class="header-anchor" href="#e-convertsizeunittomegabyte" aria-hidden="true">#</a> e. ConvertSizeUnitToMegabyte</h3><p><strong>This function is available in version 3.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ConvertSizeUnitToMegabyte()</code> method allows you to convert a size unit such as megabyte, gigabyte to megabyte. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToMegabyte</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">UnitType</td><td style="text-align:center;">unitType</td><td style="text-align:center;">The source unit (kb, mb...)</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> gigaByte <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> megaByte <span class="token operator">=</span> gigaByte<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToMegabyte</span><span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Gigabyte<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Expected value for megaByte: 50000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> gigaByte <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">50</span>
<span class="token keyword">Dim</span> megaByte <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> gigaByte<span class="token punctuation">.</span>ConvertSizeUnitToMegabyte<span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Gigabyte<span class="token punctuation">)</span>

<span class="token comment">&#39; Expected value for megaByte: 50000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="f-convertsizeunittogigabyte" tabindex="-1"><a class="header-anchor" href="#f-convertsizeunittogigabyte" aria-hidden="true">#</a> f. ConvertSizeUnitToGigabyte</h3><p><strong>This function is available in version 3.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ConvertSizeUnitToGigabyte()</code> method allows you to convert a size unit such as megabyte, petabyte to gigabyte. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToGigabyte</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">UnitType</td><td style="text-align:center;">unitType</td><td style="text-align:center;">The source unit (kb, mb...)</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> megaByte <span class="token operator">=</span> <span class="token number">4400</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> gigaByte <span class="token operator">=</span> megaByte<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToGigabyte</span><span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Megabyte<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Expected value for gigaByte: 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> megaByte <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">4400</span>
<span class="token keyword">Dim</span> gigaByte <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> megaByte<span class="token punctuation">.</span>ConvertSizeUnitToGigabyte<span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Megabyte<span class="token punctuation">)</span>

<span class="token comment">&#39; Expected value for gigaByte: 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="g-convertsizeunittoterabyte" tabindex="-1"><a class="header-anchor" href="#g-convertsizeunittoterabyte" aria-hidden="true">#</a> g. ConvertSizeUnitToTerabyte</h3><p><strong>This function is available in version 3.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ConvertSizeUnitToTerabyte()</code> method allows you to convert a size unit such as megabyte, petabyte to terabyte. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToTerabyte</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">UnitType</td><td style="text-align:center;">unitType</td><td style="text-align:center;">The source unit (kb, mb...)</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> gigaByte <span class="token operator">=</span> <span class="token number">2000</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> teraByte <span class="token operator">=</span> gigaByte<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToTerabyte</span><span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Gigabyte<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Expected value for teraByte: 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> gigaByte <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">2000</span>
<span class="token keyword">Dim</span> teraByte <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> gigaByte<span class="token punctuation">.</span>ConvertSizeUnitToTerabyte<span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Gigabyte<span class="token punctuation">)</span>

<span class="token comment">&#39; Expected value for teraByte: 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="h-convertsizeunittopetabyte" tabindex="-1"><a class="header-anchor" href="#h-convertsizeunittopetabyte" aria-hidden="true">#</a> h. ConvertSizeUnitToPetabyte</h3><p><strong>This function is available in version 3.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ConvertSizeUnitToPetabyte()</code> method allows you to convert a size unit such as megabyte, terabyte to petabyte. It returns a <code>double</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToPetabyte</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">UnitType</td><td style="text-align:center;">unitType</td><td style="text-align:center;">The source unit (kb, mb...)</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> teraByte <span class="token operator">=</span> <span class="token number">6000</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">double</span></span> petaByte <span class="token operator">=</span> teraByte<span class="token punctuation">.</span><span class="token function">ConvertSizeUnitToPetabyte</span><span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Terabyte<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Expected value for petaByte: 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> teraByte <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">6000</span>
<span class="token keyword">Dim</span> petaByte <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> teraByte<span class="token punctuation">.</span>ConvertSizeUnitToPetabyte<span class="token punctuation">(</span>UnitType<span class="token punctuation">.</span>Terabyte<span class="token punctuation">)</span>

<span class="token comment">&#39; Expected value for petaByte: 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="i-getdivisors" tabindex="-1"><a class="header-anchor" href="#i-getdivisors" aria-hidden="true">#</a> i. GetDivisors</h3><p><strong>This function is available in version 4.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>GetDivisors()</code> method allows you to get all the divisors of a specific <code>int</code> number. It returns a <code>int[]</code> array.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>IntExtensions<span class="token punctuation">.</span><span class="token function">GetDivisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has no arguments.</p><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> n <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> ds <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">GetDivisors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ds = [1, 2, 5, 10]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> n <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> <span class="token number">10</span>;
<span class="token keyword">Dim</span> ds <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> n<span class="token punctuation">.</span>GetDivisors<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">&#39; ds = [1, 2, 5, 10]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h2 id="arrays-extensions" tabindex="-1"><a class="header-anchor" href="#arrays-extensions" aria-hidden="true">#</a> Arrays Extensions</h2><h3 id="a-append" tabindex="-1"><a class="header-anchor" href="#a-append" aria-hidden="true">#</a> a. Append</h3><p><strong>This function is available in version 2.5 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>Append()</code> method allows you to append an item or multiple items to an array. Returns a <code>T[]</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>ArrayExtensions<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two variations:</p><p><strong>Variation 1</strong></p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">T</td><td style="text-align:center;">item</td><td style="text-align:center;">The item which is going to be append in the array</td></tr></tbody></table><p><strong>Variation 2</strong></p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">params T[]</td><td style="text-align:center;">items</td><td style="text-align:center;">The items which are going to be append in the array</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Variation 1</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> numbers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> appendNumbers <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// appendNumbers: { 1, 2, 3, 4, 5 }</span>

<span class="token comment">// Variation 2</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> numbers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> appendNumbers <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">Append</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// appendNumbers: { 1, 2, 3, 4, 5, 6 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token comment">&#39; Variation</span>
<span class="token keyword">Dim</span> numbers <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>
<span class="token keyword">Dim</span> appendNumbers <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> numbers<span class="token punctuation">.</span>Append<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">&#39; appendNumbers: { 1, 2, 3, 4, 5 }</span>

<span class="token comment">&#39; Variation 2</span>
<span class="token keyword">Dim</span> numbers <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>
<span class="token keyword">Dim</span> appendNumbers <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> numbers<span class="token punctuation">.</span>Append<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
<span class="token comment">&#39; appendNumbers: { 1, 2, 3, 4, 5, 6 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="b-removeitem" tabindex="-1"><a class="header-anchor" href="#b-removeitem" aria-hidden="true">#</a> b. RemoveItem</h3><p><strong>This function is available in version 2.5 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>RemoveItem()</code> method allows you to remove a specific item from an array. It returns a <code>T[]</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>ArrayExtensions<span class="token punctuation">.</span><span class="token function">RemoveItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This method has two variations:</p><p><strong>Variation 1</strong></p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">T</td><td style="text-align:center;">item</td><td style="text-align:center;">The item to remove</td></tr></tbody></table><p><strong>Variation 2</strong></p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">params T[]</td><td style="text-align:center;">items</td><td style="text-align:center;">The items to remove</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Variation 1</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> numbers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token keyword">remove</span> <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">RemoveItem</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// remove: { 1, 2, 3, 4 }</span>

<span class="token comment">// Variation 2</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> numbers <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token keyword">remove</span> <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">RemoveItem</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// remove: { 1, 2, 4 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token comment">&#39; Variation 1</span>
<span class="token keyword">Dim</span> numbers <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token keyword">Dim</span> remove <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> numbers<span class="token punctuation">.</span>RemoveItem<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token comment">&#39; remove: { 1, 2, 3, 4 }</span>

<span class="token comment">&#39; Variation 2</span>
<span class="token keyword">Dim</span> numbers <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token keyword">Dim</span> remove <span class="token keyword">As</span> <span class="token keyword">Integer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> numbers<span class="token punctuation">.</span>RemoveItem<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">&#39; remove: { 1, 2, 4 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="c-unsplit" tabindex="-1"><a class="header-anchor" href="#c-unsplit" aria-hidden="true">#</a> c. UnSplit</h3><p><strong>This function is available in version 3.6 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>UnSplit()</code> method allows you to unsplit an array of <code>string</code> using a separator. It returns a <code>string</code> value.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>ArrayExtensions<span class="token punctuation">.</span><span class="token function">UnSplit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p><table><thead><tr><th style="text-align:center;">Value</th><th style="text-align:center;">Argument</th><th style="text-align:center;">Description</th></tr></thead><tbody><tr><td style="text-align:center;">string</td><td style="text-align:center;">separator</td><td style="text-align:center;">The separator to insert between items.</td></tr></tbody></table><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> array <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> unSplit <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">UnSplit</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Output:</span>
<span class="token comment">// a;b;c;d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> array <span class="token keyword">As</span> <span class="token keyword">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;d&quot;</span><span class="token punctuation">}</span>
<span class="token keyword">Dim</span> unSplit <span class="token keyword">As</span> <span class="token keyword">String</span> <span class="token operator">=</span> array<span class="token punctuation">.</span>UnSplit<span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span>

<span class="token comment">&#39; Output:</span>
<span class="token comment">&#39; a;b;c;d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h2 id="double-extensions" tabindex="-1"><a class="header-anchor" href="#double-extensions" aria-hidden="true">#</a> Double Extensions</h2><h3 id="a-toseconds" tabindex="-1"><a class="header-anchor" href="#a-toseconds" aria-hidden="true">#</a> a. ToSeconds</h3><p><strong>This function is available in version 4.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details>`,291),u=n("code",null,"ToSeconds",-1),k=n("code",null,"double",-1),m=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>DoubleExtensions<span class="token punctuation">.</span><span class="token function">ToSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p>`,3),y=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"Value"),n("th",{style:{"text-align":"center"}},"Argument"),n("th",{style:{"text-align":"center"}},"Description")])],-1),g={style:{"text-align":"center"}},b=n("code",null,"TimeUnits",-1),h=n("td",{style:{"text-align":"center"}},"timeUnits",-1),v=n("td",{style:{"text-align":"center"}},"The time unit (seconds, hours...) of the number to convert.",-1),x=s(`<p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> t <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// Minutes</span>
<span class="token class-name"><span class="token keyword">double</span></span> tSeconds <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">ToSeconds</span><span class="token punctuation">(</span>TimeUnits<span class="token punctuation">.</span>Minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// tSeconds = 600</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> t <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">10</span> <span class="token comment">&#39; Minutes</span>
<span class="token keyword">Dim</span> tSeconds <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>ToSeconds<span class="token punctuation">(</span>TimeUnits<span class="token punctuation">.</span>Minutes<span class="token punctuation">)</span>

<span class="token comment">&#39; tSeconds = 600</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="b-tominutes" tabindex="-1"><a class="header-anchor" href="#b-tominutes" aria-hidden="true">#</a> b. ToMinutes</h3><p><strong>This function is available in version 4.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details>`,9),w=n("code",null,"ToMinutes",-1),T=n("code",null,"double",-1),C=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>DoubleExtensions<span class="token punctuation">.</span><span class="token function">ToMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p>`,3),f=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"Value"),n("th",{style:{"text-align":"center"}},"Argument"),n("th",{style:{"text-align":"center"}},"Description")])],-1),E={style:{"text-align":"center"}},L=n("code",null,"TimeUnits",-1),D=n("td",{style:{"text-align":"center"}},"timeUnits",-1),I=n("td",{style:{"text-align":"center"}},"The time unit (seconds, hours...) of the number to convert.",-1),q=s(`<p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> t <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// Hours</span>
<span class="token class-name"><span class="token keyword">double</span></span> tMinutes <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">ToMinutes</span><span class="token punctuation">(</span>TimeUnits<span class="token punctuation">.</span>Minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// tMinutes = 60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> t <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">&#39; Hours</span>
<span class="token keyword">Dim</span> tMinutes <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>ToMinutes<span class="token punctuation">(</span>TimeUnits<span class="token punctuation">.</span>Minutes<span class="token punctuation">)</span>

<span class="token comment">&#39; tMinutes = 60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="c-tohours" tabindex="-1"><a class="header-anchor" href="#c-tohours" aria-hidden="true">#</a> c. ToHours</h3><p><strong>This function is available in version 4.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details>`,9),N=n("code",null,"ToHours",-1),_=n("code",null,"double",-1),A=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>DoubleExtensions<span class="token punctuation">.</span><span class="token function">ToHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p>`,3),B=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"Value"),n("th",{style:{"text-align":"center"}},"Argument"),n("th",{style:{"text-align":"center"}},"Description")])],-1),S={style:{"text-align":"center"}},U=n("code",null,"TimeUnits",-1),V=n("td",{style:{"text-align":"center"}},"timeUnits",-1),H=n("td",{style:{"text-align":"center"}},"The time unit (seconds, hours...) of the number to convert.",-1),F=s(`<p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> t <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span> <span class="token comment">// Minutes</span>
<span class="token class-name"><span class="token keyword">double</span></span> tHours <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">ToHours</span><span class="token punctuation">(</span>TimeUnits<span class="token punctuation">.</span>Minutes<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// tHours = 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> t <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">120</span> <span class="token comment">&#39; Minutes</span>
<span class="token keyword">Dim</span> tHours <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>ToHours<span class="token punctuation">(</span>TimeUnits<span class="token punctuation">.</span>Minutes<span class="token punctuation">)</span>

<span class="token comment">&#39; tHours = 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="d-todays" tabindex="-1"><a class="header-anchor" href="#d-todays" aria-hidden="true">#</a> d. ToDays</h3><p><strong>This function is available in version 4.3 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details>`,9),z=n("code",null,"ToDays",-1),G=n("code",null,"double",-1),R=s(`<p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>DoubleExtensions<span class="token punctuation">.</span><span class="token function">ToDays</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has one argument:</p>`,3),M=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"Value"),n("th",{style:{"text-align":"center"}},"Argument"),n("th",{style:{"text-align":"center"}},"Description")])],-1),W={style:{"text-align":"center"}},P=n("code",null,"TimeUnits",-1),O=n("td",{style:{"text-align":"center"}},"timeUnits",-1),K=n("td",{style:{"text-align":"center"}},"The time unit (seconds, hours...) of the number to convert.",-1),j=s(`<p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> t <span class="token operator">=</span> <span class="token number">72</span><span class="token punctuation">;</span> <span class="token comment">// Hours</span>
<span class="token class-name"><span class="token keyword">double</span></span> tDays <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">ToDays</span><span class="token punctuation">(</span>TimeUnits<span class="token punctuation">.</span>Hours<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// tDays = 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> t <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">72</span> <span class="token comment">&#39; Hours</span>
<span class="token keyword">Dim</span> tDays <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>ToDays<span class="token punctuation">(</span>TimeUnits<span class="token punctuation">.</span>Hours<span class="token punctuation">)</span>

<span class="token comment">&#39; tDays = 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p><h3 id="e-toint" tabindex="-1"><a class="header-anchor" href="#e-toint" aria-hidden="true">#</a> e. ToInt</h3><p><strong>This function is available in version 4.8 and higher.</strong></p><details><summary>Compatibility</summary><table><thead><tr><th style="text-align:center;">Frameworks</th><th style="text-align:center;">LeoCorpLibrary</th><th style="text-align:center;">LeoCorpLibrary.Core</th></tr></thead><tbody><tr><td style="text-align:center;">.NET 6</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET 5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Core 3.1</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr><tr><td style="text-align:center;">.NET Framework 4.5</td><td style="text-align:center;">\u2714</td><td style="text-align:center;">\u2714</td></tr></tbody></table></details><p>The <code>ToInt()</code> methods allows you to convert any <code>double</code> number to an <code>int</code>. Returns an <code>int</code> number.</p><p>It&#39;s in:</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>LeoCorpLibrary<span class="token punctuation">.</span>Extensions<span class="token punctuation">.</span>DoubleExtensions<span class="token punctuation">.</span><span class="token function">ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It has no argument.</p><p>Here&#39;s an example of usage:</p><p>C#</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">double</span></span> t <span class="token operator">=</span> <span class="token number">7.4</span><span class="token punctuation">;</span> <span class="token comment">// Double number</span>
<span class="token class-name"><span class="token keyword">int</span></span> tInt <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">ToInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// tInt = 7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>VB</p><div class="language-vb ext-vb line-numbers-mode"><pre class="language-vb"><code><span class="token keyword">Dim</span> t <span class="token keyword">As</span> <span class="token keyword">Double</span> <span class="token operator">=</span> <span class="token number">7.4</span> <span class="token comment">&#39; Double number</span>
<span class="token keyword">Dim</span> tInt <span class="token keyword">As</span> <span class="token keyword">Integer</span> <span class="token operator">=</span> t<span class="token punctuation">.</span>ToInt<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">&#39; tInt = 7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#extensions">Go to top</a></p>`,19);function Y(J,Q){const e=l("RouterLink");return i(),c("div",null,[d,n("p",null,[t("The "),u,t(" methods allows you to convert any "),k,t(" number that represent a "),a(e,{to:"/Enums.html#b-timeunits"},{default:o(()=>[t("time unit")]),_:1}),t(" (hours, days...) to seconds.")]),m,n("table",null,[y,n("tbody",null,[n("tr",null,[n("td",g,[a(e,{to:"/Enums.html#b-timeunits"},{default:o(()=>[b]),_:1})]),h,v])])]),x,n("p",null,[t("The "),w,t(" methods allows you to convert any "),T,t(" number that represent a "),a(e,{to:"/Enums.html#b-timeunits"},{default:o(()=>[t("time unit")]),_:1}),t(" (hours, days...) to minutes.")]),C,n("table",null,[f,n("tbody",null,[n("tr",null,[n("td",E,[a(e,{to:"/Enums.html#b-timeunits"},{default:o(()=>[L]),_:1})]),D,I])])]),q,n("p",null,[t("The "),N,t(" methods allows you to convert any "),_,t(" number that represent a "),a(e,{to:"/Enums.html#b-timeunits"},{default:o(()=>[t("time unit")]),_:1}),t(" (hours, days...) to hours.")]),A,n("table",null,[B,n("tbody",null,[n("tr",null,[n("td",S,[a(e,{to:"/Enums.html#b-timeunits"},{default:o(()=>[U]),_:1})]),V,H])])]),F,n("p",null,[t("The "),z,t(" methods allows you to convert any "),G,t(" number that represent a "),a(e,{to:"/Enums.html#b-timeunits"},{default:o(()=>[t("time unit")]),_:1}),t(" (hours, days...) to days.")]),R,n("table",null,[M,n("tbody",null,[n("tr",null,[n("td",W,[a(e,{to:"/Enums.html#b-timeunits"},{default:o(()=>[P]),_:1})]),O,K])])]),j])}const Z=p(r,[["render",Y],["__file","Extensions.html.vue"]]);export{Z as default};
